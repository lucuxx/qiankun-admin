{"remainingRequest":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/views/edit/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/views/edit/index.vue","mtime":1564602776604},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component} from \"vue-property-decorator\";\nimport {Getter, Action} from \"vuex-class\";\nimport \"highlight.js/styles/github.css\";\nimport hljs from \"highlight.js\";\nimport articleHeader from \"./articleHeader.vue\";\nimport moment from \"moment\";\nimport marked from \"marked\";\nimport jsCookie from \"js-cookie\";\n\n@Component({components: {articleHeader}})\nexport default class edit extends Vue {\n    @Getter user: any;\n    @Action setUserInfo: any;\n\n    theme: string = \"default\";\n    loading:boolean = false;\n    private $api: any;\n\n    articleTitle: Array<Types.ArticleTitle> = [];\n    choiceIndex: number = 0;\n\n    articleClass: Array<Types.ArticleClass> = [\n        {label: \"前端技术\", icon: \"\"},\n        {label: \"生活情感\", icon: \"\"},\n        {label: \"日常吐槽\", icon: \"\"},\n        {label: \"语言艺术\", icon: \"\"},\n    ];\n\n    async mounted() {\n        this.loading = true;\n        if (jsCookie.get(\"email\")) {\n            const oldCookie: string = jsCookie.get(\"email\") || \"\";\n            const cookie: string = this.$util.DecodeCookie(oldCookie);\n            const {code, data} = (await this.$api.getUserInfo({cookie})).data;\n            if (code === 0) {\n                this.setUserInfo(data);\n            }\n        }\n        await this.$api.getArticle().then((req: any) => {\n            const data = req.data.data;\n            this.$lo.each(data,(item:Types.ArticleTitle) => {\n                const result = {title: item.title,_id:item._id};\n                this.articleTitle.push(result)\n            })\n        });\n        this.loading = false\n    }\n\n    get params(): Types.AddArticle {\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: true,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false\n        });\n        return {\n            author: this.user.name || \"\",\n            title: moment().format(\"YYYY-MM-DD\") || \"\",\n            time: moment().format(\"YYYY-MM-DD\") || \"\",\n            tags: \"前端技术\" || \"\",\n            content: marked(`# ${moment().format(\"YYYY-MM-DD\")}`) || \"\", // 转换过后的html\n            contentMD: `# ${moment().format(\"YYYY-MM-DD\")}` || \"\" // markdown\n        };\n    }\n\n\n    addArticle() {\n        this.$api.addArticle(this.params).then((req: Types.InterfaceData) => {\n            this.$message({\n                type: req.data.code === 0 ? \"success\" : \"error\",\n                message: req.data.data.message\n            });\n        });\n\n    }\n\n    changeArticle(index: number): void {\n        this.choiceIndex = index;\n    }\n\n    async uploadImage(file: any) {\n        return await this.uploadRequest(file);\n    }\n\n    changeColor(color: string) {\n        console.log(color);\n        this.theme = color;\n    }\n\n    uploadRequest(file: any) {\n        const result = \"https://github.com/luosijie/Front-end-Blog/blob/master/img/logo_vmmarkdown_name.png?raw=true\";\n        return new Promise((resolve, reject) => {\n            window.setTimeout(() => {\n                resolve(result);\n            }, 1000);\n        });\n    }\n\n    htmlChange(html: string) {\n        console.log(\"html-content\", html);\n        this.$nextTick(() => {\n            const codes = document.querySelectorAll(\".markdown-body pre code\");\n            codes.forEach(elem => {\n                hljs.highlightBlock(elem);\n            });\n            // let html = document.querySelector('.markdown-body')\n        });\n        // get html string here\n    }\n\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/views/edit","sourcesContent":["<template>\n    <section class=\"edit\">\n        <el-container style=\"height: 100%\" v-loading=\"loading\">\n            <el-aside style=\"border-right:1px solid #999999;\" width=\"200px\">\n                <ul class=\"article_content\">\n                    <li class=\"article_list\" @click=\"addArticle\"><i class=\"el-icon-circle-plus\"></i><span\n                            style=\"display: inline-block;margin-left: 10px\">新建文章</span></li>\n                    <li class=\"article_list\" @click=\"changeArticle(index)\" v-for=\"(item,index) in articleTitle\"\n                        :key=\"index\" :class=\"choiceIndex === index ? 'choiceList' : ''\">\n                        <span style=\"display: inline-block;margin-right: 20px\">{{ item.title }}</span>\n                        <el-dropdown trigger=\"click\">\n                            <span class=\"el-dropdown-link\">\n                                <i v-show=\"choiceIndex === index\" class=\"el-icon-s-tools\" style=\"padding: 25px 5px\"></i>\n                            </span>\n                            <el-dropdown-menu slot=\"dropdown\">\n                                <el-dropdown-item icon=\"el-icon-upload2\">置顶文章</el-dropdown-item>\n                                <el-dropdown-item icon=\"el-icon-lock\">设为私密</el-dropdown-item>\n                                <el-dropdown-item icon=\"el-icon-delete-solid\">删除文章</el-dropdown-item>\n                                <el-dropdown-item icon=\"el-icon-s-fold\">\n                                    <el-dropdown>\n                                        <span class=\"el-dropdown-link\">\n                                            <span>设置文章分类</span>\n                                        </span>\n                                        <el-dropdown-menu slot=\"dropdown\">\n                                            <el-dropdown-item v-for=\"(item,index) in articleClass\" :key=\"index\"\n                                                              :icon=\"item.icon\">{{ item.label }}\n                                            </el-dropdown-item>\n                                        </el-dropdown-menu>\n                                    </el-dropdown>\n                                </el-dropdown-item>\n                            </el-dropdown-menu>\n                        </el-dropdown>\n                    </li>\n                </ul>\n            </el-aside>\n            <el-container style=\"height: 100%\">\n                <el-header>\n                    <articleHeader @changeColor=\"changeColor\"></articleHeader>\n                </el-header>\n                <el-main style=\"padding: 0;height: 100%;\">\n                    <mark-down\n                            :theme=\"theme\"\n                            :uploadImage=\"uploadImage\"\n                            width=\"100%\"\n                            height=\"100%\"\n                            class=\"markdown\"\n                            @html-change=\"htmlChange\"\n                    />\n                </el-main>\n            </el-container>\n        </el-container>\n    </section>\n</template>\n\n<script lang=\"ts\">\n    import {Vue, Component} from \"vue-property-decorator\";\n    import {Getter, Action} from \"vuex-class\";\n    import \"highlight.js/styles/github.css\";\n    import hljs from \"highlight.js\";\n    import articleHeader from \"./articleHeader.vue\";\n    import moment from \"moment\";\n    import marked from \"marked\";\n    import jsCookie from \"js-cookie\";\n\n    @Component({components: {articleHeader}})\n    export default class edit extends Vue {\n        @Getter user: any;\n        @Action setUserInfo: any;\n\n        theme: string = \"default\";\n        loading:boolean = false;\n        private $api: any;\n\n        articleTitle: Array<Types.ArticleTitle> = [];\n        choiceIndex: number = 0;\n\n        articleClass: Array<Types.ArticleClass> = [\n            {label: \"前端技术\", icon: \"\"},\n            {label: \"生活情感\", icon: \"\"},\n            {label: \"日常吐槽\", icon: \"\"},\n            {label: \"语言艺术\", icon: \"\"},\n        ];\n\n        async mounted() {\n            this.loading = true;\n            if (jsCookie.get(\"email\")) {\n                const oldCookie: string = jsCookie.get(\"email\") || \"\";\n                const cookie: string = this.$util.DecodeCookie(oldCookie);\n                const {code, data} = (await this.$api.getUserInfo({cookie})).data;\n                if (code === 0) {\n                    this.setUserInfo(data);\n                }\n            }\n            await this.$api.getArticle().then((req: any) => {\n                const data = req.data.data;\n                this.$lo.each(data,(item:Types.ArticleTitle) => {\n                    const result = {title: item.title,_id:item._id};\n                    this.articleTitle.push(result)\n                })\n            });\n            this.loading = false\n        }\n\n        get params(): Types.AddArticle {\n            marked.setOptions({\n                renderer: new marked.Renderer(),\n                gfm: true,\n                tables: true,\n                breaks: true,\n                pedantic: false,\n                sanitize: false,\n                smartLists: true,\n                smartypants: false\n            });\n            return {\n                author: this.user.name || \"\",\n                title: moment().format(\"YYYY-MM-DD\") || \"\",\n                time: moment().format(\"YYYY-MM-DD\") || \"\",\n                tags: \"前端技术\" || \"\",\n                content: marked(`# ${moment().format(\"YYYY-MM-DD\")}`) || \"\", // 转换过后的html\n                contentMD: `# ${moment().format(\"YYYY-MM-DD\")}` || \"\" // markdown\n            };\n        }\n\n\n        addArticle() {\n            this.$api.addArticle(this.params).then((req: Types.InterfaceData) => {\n                this.$message({\n                    type: req.data.code === 0 ? \"success\" : \"error\",\n                    message: req.data.data.message\n                });\n            });\n\n        }\n\n        changeArticle(index: number): void {\n            this.choiceIndex = index;\n        }\n\n        async uploadImage(file: any) {\n            return await this.uploadRequest(file);\n        }\n\n        changeColor(color: string) {\n            console.log(color);\n            this.theme = color;\n        }\n\n        uploadRequest(file: any) {\n            const result = \"https://github.com/luosijie/Front-end-Blog/blob/master/img/logo_vmmarkdown_name.png?raw=true\";\n            return new Promise((resolve, reject) => {\n                window.setTimeout(() => {\n                    resolve(result);\n                }, 1000);\n            });\n        }\n\n        htmlChange(html: string) {\n            console.log(\"html-content\", html);\n            this.$nextTick(() => {\n                const codes = document.querySelectorAll(\".markdown-body pre code\");\n                codes.forEach(elem => {\n                    hljs.highlightBlock(elem);\n                });\n                // let html = document.querySelector('.markdown-body')\n            });\n            // get html string here\n        }\n\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .edit {\n        width: 100%;\n        height: 100%;\n\n        .article_content {\n            padding-left: 0;\n            margin-top: 0;\n\n            .article_list {\n                padding-left: 20px;\n                box-sizing: border-box;\n                list-style: none;\n                width: 100%;\n                height: 70px;\n                line-height: 70px;\n                border-bottom: 1px solid #eeeeee;\n            }\n\n            .choiceList {\n                background-color: #999999;\n            }\n        }\n\n    }\n\n</style>\n"]}]}