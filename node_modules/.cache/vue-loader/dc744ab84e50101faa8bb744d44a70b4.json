{"remainingRequest":"/Users/liuxiang/Desktop/typescript-vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuxiang/Desktop/typescript-vue-demo/src/views/other/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuxiang/Desktop/typescript-vue-demo/src/views/other/login.vue","mtime":1559813774447},{"path":"/Users/liuxiang/Desktop/typescript-vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/typescript-vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/typescript-vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/typescript-vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import {Vue, Component} from 'vue-property-decorator'\n\n\timport TopNav from './TopNav'\n\n    @Component({components: {TopNav}})\n    \n    export default class LoginNav extends Vue {\n        userForm = {\n            email: '',\n            password: ''\n        }\n        registerForm = {\n            email: '',\n            name: '',\n            pass: '',\n            checkPass: ''\n        }\n        loginShow = false\n        registerShow = false\n        \n        validatePass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'))\n            } else {\n                if (this.registerForm.checkPass !== '') {\n                    this.$refs.ruleForm.validateField('checkPass')\n                }\n                callback()\n            }\n        }\n        validatePass2 = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请再次输入密码'))\n            } else if (value !== this.registerForm.pass) {\n                callback(new Error('两次输入密码不一致!'))\n            } else {\n                callback()\n            }\n        }\n        rules = {\n            email: [\n                {required: true, message: '请输入邮箱地址', trigger: 'blur'},\n                {type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change']}\n            ],\n            name: [\n                {required: true, message: '请输入昵称', trigger: 'blur'},\n                {min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur'}\n            ],\n            pass: [\n                {validator: this.validatePass, trigger: 'blur'}\n            ],\n            checkPass: [\n                {validator: this.validatePass2, trigger: 'blur'}\n            ],\n        }\n        \n        \n        mounted () {\n            setTimeout(() => {\n                this.loginShow = true\n            }, 500)\n        }\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tlogin () {\n            this.$api.login(this.userForm).then(req => {\n                const {code, data} = req.data\n                if (code === 0) {\n                    this.$router.push({path: '/'})\n                } else {\n                    this.$message.error(data.message)\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n        \n        goRegister () {\n            this.loginShow = false\n            setTimeout(() => {\n                this.registerShow = true\n            }, 500)\n        }\n        \n        register (formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    console.log(this.registerForm)\n                    this.$api.register(this.registerForm).then(req => {\n                        const {code, data} = req.data\n                        if (code === 0) {\n                            this.$message({\n                                message: data.message,\n                                type: 'success'\n                            })\n                            this.registerShow = false\n                            setTimeout(() => {\n                                this.loginShow = true\n                            }, 500)\n                        } else {\n                            this.$message.error(data.message)\n                        }\n                    }).catch(err => {\n                        console.log(err)\n                    })\n                } else {\n                    this.$message({\n\t\t                    type: 'error',\n\t\t                    message: '注册信息错误,请检查'\n                    })\n                }\n            })\n        }\n\n\t}\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"login.vue","sourceRoot":"src/views/other","sourcesContent":["<template>\n\t<section class=\"login\">\n\t\t<!-- 登录 -->\n\t\t<transition\n\t\t\tmode=\"out-in\"\n\t\t\tname=\"custom-classes-transition\"\n\t\t\tenter-active-class=\"animated bounceInDown\"\n\t\t\tleave-active-class=\"animated flipOutY\"\n\t\t>\n\t\t\t<section v-show=\"loginShow\" class=\"model\">\n\t\t\t\t<el-card class=\"box-card\" shadow=\"hover\">\n\t\t\t\t\t<div slot=\"header\" class=\"clearfix\">\n\t\t\t\t\t\t<span>欢迎登录</span>\n\t\t\t\t\t\t<el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"goRegister\">没有账号</el-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style=\"margin-top: 20px\">\n\t\t\t\t\t\t<el-form label-width=\"80px\" :model=\"userForm\">\n\t\t\t\t\t\t\t<el-form-item label=\"邮箱\">\n\t\t\t\t\t\t\t\t<el-input type=\"email\" v-model=\"userForm.email\" placeholder=\"请输入邮箱\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"密码\">\n\t\t\t\t\t\t\t\t<el-input type=\"password\" v-model=\"userForm.password\" placeholder=\"请输入密码\" autocomplete=\"new-password\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item>\n\t\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"login\">登录</el-button>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t</el-form>\n\t\t\t\t\t</div>\n\t\t\t\t</el-card>\n\t\t\t</section>\n\t\t</transition>\n\t\t\n\t\t<!-- 注册 -->\n\t\t<transition\n\t\t\tmode=\"out-in\"\n\t\t\tname=\"custom-classes-transition\"\n\t\t\tenter-active-class=\"animated flipInY\"\n\t\t\tleave-active-class=\"animated zoomOutDown\"\n\t\t>\n\t\t\t<section v-show=\"registerShow\" class=\"model\">\n\t\t\t\t<el-card class=\"box-card\" shadow=\"hover\">\n\t\t\t\t\t<div slot=\"header\" class=\"clearfix\">\n\t\t\t\t\t\t<span>欢迎注册</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style=\"margin-top: 20px\">\n\t\t\t\t\t\t<el-form label-width=\"80px\" status-icon :model=\"registerForm\" :rules=\"rules\" ref=\"ruleForm\">\n\t\t\t\t\t\t\t<el-form-item label=\"邮箱\" prop=\"email\">\n\t\t\t\t\t\t\t\t<el-input type=\"email\" v-model=\"registerForm.email\" placeholder=\"请输入邮箱\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"昵称\" prop=\"name\">\n\t\t\t\t\t\t\t\t<el-input type=\"text\" v-model=\"registerForm.name\" placeholder=\"请输入昵称\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"密码\" prop=\"pass\">\n\t\t\t\t\t\t\t\t<el-input type=\"password\" v-model=\"registerForm.pass\" placeholder=\"请输入密码\" autocomplete=\"new-password\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"确认密码\" prop=\"checkPass\">\n\t\t\t\t\t\t\t\t<el-input type=\"password\" v-model=\"registerForm.checkPass\" placeholder=\"请再次输入密码\" autocomplete=\"new-password\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item>\n\t\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"register('ruleForm')\">注册</el-button>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t</el-form>\n\t\t\t\t\t</div>\n\t\t\t\t</el-card>\n\t\t\t</section>\n\t\t</transition>\n\t</section>\n</template>\n\n<script>\n    import {Vue, Component} from 'vue-property-decorator'\n\n\timport TopNav from './TopNav'\n\n    @Component({components: {TopNav}})\n    \n    export default class LoginNav extends Vue {\n        userForm = {\n            email: '',\n            password: ''\n        }\n        registerForm = {\n            email: '',\n            name: '',\n            pass: '',\n            checkPass: ''\n        }\n        loginShow = false\n        registerShow = false\n        \n        validatePass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'))\n            } else {\n                if (this.registerForm.checkPass !== '') {\n                    this.$refs.ruleForm.validateField('checkPass')\n                }\n                callback()\n            }\n        }\n        validatePass2 = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请再次输入密码'))\n            } else if (value !== this.registerForm.pass) {\n                callback(new Error('两次输入密码不一致!'))\n            } else {\n                callback()\n            }\n        }\n        rules = {\n            email: [\n                {required: true, message: '请输入邮箱地址', trigger: 'blur'},\n                {type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change']}\n            ],\n            name: [\n                {required: true, message: '请输入昵称', trigger: 'blur'},\n                {min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur'}\n            ],\n            pass: [\n                {validator: this.validatePass, trigger: 'blur'}\n            ],\n            checkPass: [\n                {validator: this.validatePass2, trigger: 'blur'}\n            ],\n        }\n        \n        \n        mounted () {\n            setTimeout(() => {\n                this.loginShow = true\n            }, 500)\n        }\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tlogin () {\n            this.$api.login(this.userForm).then(req => {\n                const {code, data} = req.data\n                if (code === 0) {\n                    this.$router.push({path: '/'})\n                } else {\n                    this.$message.error(data.message)\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n        \n        goRegister () {\n            this.loginShow = false\n            setTimeout(() => {\n                this.registerShow = true\n            }, 500)\n        }\n        \n        register (formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    console.log(this.registerForm)\n                    this.$api.register(this.registerForm).then(req => {\n                        const {code, data} = req.data\n                        if (code === 0) {\n                            this.$message({\n                                message: data.message,\n                                type: 'success'\n                            })\n                            this.registerShow = false\n                            setTimeout(() => {\n                                this.loginShow = true\n                            }, 500)\n                        } else {\n                            this.$message.error(data.message)\n                        }\n                    }).catch(err => {\n                        console.log(err)\n                    })\n                } else {\n                    this.$message({\n\t\t                    type: 'error',\n\t\t                    message: '注册信息错误,请检查'\n                    })\n                }\n            })\n        }\n\n\t}\n</script>\n\n<style lang=\"less\">\n\t.login {\n\t\twidth: 100%;\n\t\theight: 850px;\n\t\tposition: relative;\n\t\t.model {\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 50%;\n\t\t\theight: 30%;\n\t\t\twidth: 50%;\n\t\t\tmargin: -15% 0 0 -25%;\n\t\t}\n\t}\n</style>\n"]}]}