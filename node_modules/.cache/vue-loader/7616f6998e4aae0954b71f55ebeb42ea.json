{"remainingRequest":"/Users/liuxiang/Desktop/lxx/my-blob/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuxiang/Desktop/lxx/my-blob/src/views/comment/commentNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuxiang/Desktop/lxx/my-blob/src/views/comment/commentNav.vue","mtime":1559814856150},{"path":"/Users/liuxiang/Desktop/lxx/my-blob/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/my-blob/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/my-blob/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/my-blob/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {Vue, Component} from 'vue-property-decorator'\nimport {Getter} from 'vuex-class'\n@Component\nexport default class commentNav extends Vue {\n    @Getter user\n    commentValue = null\n    loading = false\n    defaultUrl = 'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3913721637,490556209&fm=27&gp=0.jpg'\n\n\n    goComment() {\n        if(this.user && this.$lo.size(this.user) !== 0){\n            this.loading = true\n            const params = {\n                time: this.moment().format('YYYY-MM-DD'),\n                value: this.commentValue,\n                userName: this.user.name,\n                url: !!this.user.url ? this.user.url : this.defaultUrl,\n                os: this.Os,\n                browse: this.Browse,\n                isReply: false,\n            }\n            this.$api.sendComment(params).then(req => {\n                this.$message({\n                    type: req.data.code === 0 ? 'success' : 'error',\n                    message: req.data.data.message\n                })\n                this.$emit('commit',this.loading)\n                this.commentValue = null\n            }).catch(err => {\n                if (err) {\n                    this.$message({\n                        type: 'error',\n                        message: err\n                    })\n                }\n            })\n        }else{\n            this.$message('请先登录')\n            this.commentValue = null\n        }\n\n    }\n\n    // 获取操作系统\n    get Os() {\n        const sUserAgent = navigator.userAgent;\n        const isWin = (navigator.platform === \"Win32\") || (navigator.platform === \"Windows\");\n        const isMac = (navigator.platform === \"Mac68K\") || (navigator.platform === \"MacPPC\") || (navigator.platform === \"Macintosh\") || (navigator.platform === \"MacIntel\");\n        if (isMac) return \"Mac\";\n        const isUnix = (navigator.platform === \"X11\") && !isWin && !isMac;\n        if (isUnix) return \"Unix\";\n        const isLinux = (String(navigator.platform).indexOf(\"Linux\") > -1);\n        if (isLinux) return \"Linux\";\n        if (isWin) {\n            const isWin2K = sUserAgent.indexOf(\"Windows NT 5.0\") > -1 || sUserAgent.indexOf(\"Windows 2000\") > -1;\n            if (isWin2K) return \"Win2000\";\n            const isWinXP = sUserAgent.indexOf(\"Windows NT 5.1\") > -1 || sUserAgent.indexOf(\"Windows XP\") > -1;\n            if (isWinXP) return \"WinXP\";\n            const isWin2003 = sUserAgent.indexOf(\"Windows NT 5.2\") > -1 || sUserAgent.indexOf(\"Windows 2003\") > -1;\n            if (isWin2003) return \"Win2003\";\n            const isWinVista = sUserAgent.indexOf(\"Windows NT 6.0\") > -1 || sUserAgent.indexOf(\"Windows Vista\") > -1;\n            if (isWinVista) return \"WinVista\";\n            const isWin7 = sUserAgent.indexOf(\"Windows NT 6.1\") > -1 || sUserAgent.indexOf(\"Windows 7\") > -1;\n            if (isWin7) return \"Win7\";\n            const isWin10 = sUserAgent.indexOf(\"Windows NT 10\") > -1 || sUserAgent.indexOf(\"Windows 10\") > -1;\n            if (isWin10) return \"Win10\";\n        }\n        return \"other\";\n    }\n\n    get Browse() {\n        const browser = {};\n        const userAgent = navigator.userAgent.toLowerCase();\n        let s;\n        (s = userAgent.match(/msie ([\\d.]+)/)) ? browser.ie = s[1] : (s = userAgent.match(/firefox\\/([\\d.]+)/)) ? browser.firefox = s[1] : (s = userAgent.match(/chrome\\/([\\d.]+)/)) ? browser.chrome = s[1] : (s = userAgent.match(/opera.([\\d.]+)/)) ? browser.opera = s[1] : (s = userAgent.match(/version\\/([\\d.]+).*safari/)) ? browser.safari = s[1] : 0;\n        let version = \"\";\n        if (browser.ie) {\n            version = 'IE ' + browser.ie;\n        } else {\n            if (browser.firefox) {\n                version = 'firefox ' + browser.firefox;\n            } else {\n                if (browser.chrome) {\n                    version = 'chrome ' + browser.chrome;\n                } else {\n                    if (browser.opera) {\n                        version = 'opera ' + browser.opera;\n                    } else {\n                        if (browser.safari) {\n                            version = 'safari ' + browser.safari;\n                        } else {\n                            version = '未知浏览器';\n                        }\n                    }\n                }\n            }\n        }\n        return version;\n    }\n}\n",{"version":3,"sources":["commentNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"commentNav.vue","sourceRoot":"src/views/comment","sourcesContent":["<template>\n    <section class=\"commentNav\">\n        <el-input\n                style=\"width: 100%;\"\n                type=\"textarea\"\n                :autosize=\"{ minRows: 5}\"\n                placeholder=\"少侠请留步,快来吐槽点什么鸭...\"\n                v-model=\"commentValue\">\n        </el-input>\n        <el-button style=\"display: block;margin-top: 10px;width: 80px\" type=\"primary\" @click.native=\"goComment\">\n            发送\n        </el-button>\n    </section>\n</template>\n\n<script>\n    import {Vue, Component} from 'vue-property-decorator'\n    import {Getter} from 'vuex-class'\n    @Component\n    export default class commentNav extends Vue {\n        @Getter user\n        commentValue = null\n        loading = false\n        defaultUrl = 'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3913721637,490556209&fm=27&gp=0.jpg'\n\n\n        goComment() {\n            if(this.user && this.$lo.size(this.user) !== 0){\n                this.loading = true\n                const params = {\n                    time: this.moment().format('YYYY-MM-DD'),\n                    value: this.commentValue,\n                    userName: this.user.name,\n                    url: !!this.user.url ? this.user.url : this.defaultUrl,\n                    os: this.Os,\n                    browse: this.Browse,\n                    isReply: false,\n                }\n                this.$api.sendComment(params).then(req => {\n                    this.$message({\n                        type: req.data.code === 0 ? 'success' : 'error',\n                        message: req.data.data.message\n                    })\n                    this.$emit('commit',this.loading)\n                    this.commentValue = null\n                }).catch(err => {\n                    if (err) {\n                        this.$message({\n                            type: 'error',\n                            message: err\n                        })\n                    }\n                })\n            }else{\n                this.$message('请先登录')\n                this.commentValue = null\n            }\n\n        }\n\n        // 获取操作系统\n        get Os() {\n            const sUserAgent = navigator.userAgent;\n            const isWin = (navigator.platform === \"Win32\") || (navigator.platform === \"Windows\");\n            const isMac = (navigator.platform === \"Mac68K\") || (navigator.platform === \"MacPPC\") || (navigator.platform === \"Macintosh\") || (navigator.platform === \"MacIntel\");\n            if (isMac) return \"Mac\";\n            const isUnix = (navigator.platform === \"X11\") && !isWin && !isMac;\n            if (isUnix) return \"Unix\";\n            const isLinux = (String(navigator.platform).indexOf(\"Linux\") > -1);\n            if (isLinux) return \"Linux\";\n            if (isWin) {\n                const isWin2K = sUserAgent.indexOf(\"Windows NT 5.0\") > -1 || sUserAgent.indexOf(\"Windows 2000\") > -1;\n                if (isWin2K) return \"Win2000\";\n                const isWinXP = sUserAgent.indexOf(\"Windows NT 5.1\") > -1 || sUserAgent.indexOf(\"Windows XP\") > -1;\n                if (isWinXP) return \"WinXP\";\n                const isWin2003 = sUserAgent.indexOf(\"Windows NT 5.2\") > -1 || sUserAgent.indexOf(\"Windows 2003\") > -1;\n                if (isWin2003) return \"Win2003\";\n                const isWinVista = sUserAgent.indexOf(\"Windows NT 6.0\") > -1 || sUserAgent.indexOf(\"Windows Vista\") > -1;\n                if (isWinVista) return \"WinVista\";\n                const isWin7 = sUserAgent.indexOf(\"Windows NT 6.1\") > -1 || sUserAgent.indexOf(\"Windows 7\") > -1;\n                if (isWin7) return \"Win7\";\n                const isWin10 = sUserAgent.indexOf(\"Windows NT 10\") > -1 || sUserAgent.indexOf(\"Windows 10\") > -1;\n                if (isWin10) return \"Win10\";\n            }\n            return \"other\";\n        }\n\n        get Browse() {\n            const browser = {};\n            const userAgent = navigator.userAgent.toLowerCase();\n            let s;\n            (s = userAgent.match(/msie ([\\d.]+)/)) ? browser.ie = s[1] : (s = userAgent.match(/firefox\\/([\\d.]+)/)) ? browser.firefox = s[1] : (s = userAgent.match(/chrome\\/([\\d.]+)/)) ? browser.chrome = s[1] : (s = userAgent.match(/opera.([\\d.]+)/)) ? browser.opera = s[1] : (s = userAgent.match(/version\\/([\\d.]+).*safari/)) ? browser.safari = s[1] : 0;\n            let version = \"\";\n            if (browser.ie) {\n                version = 'IE ' + browser.ie;\n            } else {\n                if (browser.firefox) {\n                    version = 'firefox ' + browser.firefox;\n                } else {\n                    if (browser.chrome) {\n                        version = 'chrome ' + browser.chrome;\n                    } else {\n                        if (browser.opera) {\n                            version = 'opera ' + browser.opera;\n                        } else {\n                            if (browser.safari) {\n                                version = 'safari ' + browser.safari;\n                            } else {\n                                version = '未知浏览器';\n                            }\n                        }\n                    }\n                }\n            }\n            return version;\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .commentNav{\n\n    }\n</style>"]}]}