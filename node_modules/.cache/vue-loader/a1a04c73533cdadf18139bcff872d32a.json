{"remainingRequest":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/components/MarkDown/vm-markdown-menu.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/components/MarkDown/vm-markdown-menu.vue","mtime":1564589000000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component,Prop} from 'vue-property-decorator'\nimport VmMarkdownButton from './vm-markdown-button.vue'\nimport VmMarkdownDropdown from './vm-markdown-dropdown.vue'\nimport insertText from './utils/index.js'\n\n@Component({components: {VmMarkdownButton,VmMarkdownDropdown}})\nexport default class Name extends Vue {\n    @Prop({\n        type: Function, default() {\n            return () => {\n            };\n        }\n    }) uploadImage: any;\n    @Prop({default: \"#fafbfc\"}) bgMenu: string;\n    @Prop({default: \"1px solid #eeeff1\"}) menuBorder: string;\n    @Prop({default: \"#858585\"}) menuColor: string;\n    @Prop({default: \"#232323\"}) hoverColor: string;\n    @Prop()markdwon:string;\n\n\n    get filterColor():string {\n        if (this.bgMenu === '#fafbfc') {\n            return '#232323'\n        } else {\n            return this.bgMenu\n        }\n    }\n\n    async insertImage(e:any){\n        const files = e.target.files || e.dataTransfer.files;\n        const file = files[0];\n        if (!files.length)\n            return;\n        let imgUrl = await this.uploadImage(file);\n        imgUrl = `![image](${imgUrl})`;\n        this.insertText(imgUrl)\n    }\n\n    /**\n     * 文章发布\n     */\n    goPublish(){\n        console.log(this.markdwon);\n    }\n\n    insertText(string:string) {\n        let content:any = document.querySelector('.vm-markdown-content');\n        insertText(content, string);\n        this.$emit('textChange', content.value)\n    }\n\n    uploadTable(content:any) {\n        this.$emit('textChange', content)\n    }\n\n    setLayout(type:any) {\n        const VmMarkdown:any = document.querySelector('.vm-markdown');\n        const VmMarkdownEdit:any = document.querySelector('.vm-markdown-edit');\n        switch (type) {\n            case 'default':\n                VmMarkdownEdit.style.width = '50%';\n                break;\n            case 'right':\n                VmMarkdownEdit.style.width = '100%';\n                break;\n            case 'left':\n                VmMarkdownEdit.style.width = '0';\n                break;\n            case 'zoom':\n                if (VmMarkdown.style.position === 'fixed') {\n                    const parent:any = this.$parent;\n                    VmMarkdown.style.cssText = `\n                        width: ${parent.width};\n                        height: ${parent.height};\n                    `\n                } else {\n                    VmMarkdown.style.cssText = `\n                        position: fixed;\n                        z-index: 999;\n                        left: 0;\n                        top: 0;\n                        margin: 0;\n                        width: 100%;\n                        height: 100%;\n                    `\n                }\n                break\n        }\n    }\n\n    mounted() {\n        let menu:any = document.querySelector('.vm-editor-menu');\n        menu.addEventListener('mouseover', (evt:any) => {\n            if (evt.target.tagName == 'I') {\n                evt.target.style.color = this.hoverColor\n            }\n        });\n        menu.addEventListener('mouseout', (evt:any) => {\n            if (evt.target.tagName == 'I') {\n                evt.target.style.color = ''\n            }\n        })\n    }\n}\n",{"version":3,"sources":["vm-markdown-menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vm-markdown-menu.vue","sourceRoot":"src/components/MarkDown","sourcesContent":["<template>\n    <div class=\"vm-editor-menu\" :style=\"{backgroundColor:bgMenu, color:menuColor, border:menuBorder}\">\n        <div class=\"command\">\n            <vm-markdown-button icon=\"iconfont icon-heading\">\n                <vm-markdown-dropdown>\n                    <ul class=\"vm-editor-ul\" :style=\"{color: filterColor}\">\n                        <li @click=\"insertText('# Title\\n')\">\n                            <h1>H1</h1>\n                        </li>\n                        <li @click=\"insertText('## Title\\n')\">\n                            <h2>H2</h2>\n                        </li>\n                        <li @click=\"insertText('### Title\\n')\">\n                            <h3>H3</h3>\n                        </li>\n                        <li @click=\"insertText('#### Title\\n')\">\n                            <h4>H4</h4>\n                        </li>\n                        <li @click=\"insertText('##### Title\\n')\">\n                            <h5>H5</h5>\n                        </li>\n                    </ul>\n                </vm-markdown-dropdown>\n            </vm-markdown-button>\n            <vm-markdown-button icon=\"iconfont icon-bold\" @click.native=\"insertText(' **Bold** ')\"/>\n            <vm-markdown-button icon=\"iconfont icon-italic\" @click.native=\"insertText(' *Italic* ')\"/>\n            <vm-markdown-button icon=\"iconfont icon-strikethrough\" @click.native=\"insertText(' ~~Strikethrough~~ ')\">\n            </vm-markdown-button>\n            <vm-markdown-button icon=\"iconfont icon-ol\" @click.native=\"insertText('1. Ordered List\\n')\"/>\n            <vm-markdown-button icon=\"iconfont icon-ul\" @click.native=\"insertText('- Unordered List\\n')\"/>\n            <vm-markdown-button icon=\"iconfont icon-quote\" @click.native=\"insertText(' > Blockquote\\n\\n')\"/>\n            <vm-markdown-button icon=\"iconfont icon-code\" @click.native=\"insertText('```\\nCode\\n```\\n')\"/>\n            <vm-markdown-button icon=\"iconfont icon-image\" keepSlot>\n                <input type=\"file\" accept=\"image/jpeg,image/jpg,image/png\" @change=\"insertImage\" class=\"load-img\">\n            </vm-markdown-button>\n            <vm-markdown-button icon=\"iconfont icon-link\" @click.native=\"insertText('[JesseLuo](https://github.com/luosijie)')\"/>\n            <vm-markdown-button icon=\"iconfont icon-line\" @click.native=\"insertText('***\\n')\"/>\n        </div>\n        <div class=\"vm-markdown-layout\">\n            <vm-markdown-button icon=\"iconfont icon-layout-default\" layout=\"default\" @click.native=\"setLayout('default')\"/>\n            <vm-markdown-button icon=\"iconfont icon-layout-right\" layout=\"right\" @click.native=\"setLayout('right')\"/>\n            <!-- <vm-markdown-button icon=\"iconfont icon-layout-left\" layout=\"left\"/> -->\n            <vm-markdown-button icon=\"iconfont icon-layout-zoom\" layout=\"zoom\" @click.native=\"setLayout('zoom')\"/>\n            <span style=\"margin-left: 20px\" @click=\"goPublish\">发布</span>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\n    import {Vue, Component,Prop} from 'vue-property-decorator'\n    import VmMarkdownButton from './vm-markdown-button.vue'\n    import VmMarkdownDropdown from './vm-markdown-dropdown.vue'\n    import insertText from './utils/index.js'\n\n    @Component({components: {VmMarkdownButton,VmMarkdownDropdown}})\n    export default class Name extends Vue {\n        @Prop({\n            type: Function, default() {\n                return () => {\n                };\n            }\n        }) uploadImage: any;\n        @Prop({default: \"#fafbfc\"}) bgMenu: string;\n        @Prop({default: \"1px solid #eeeff1\"}) menuBorder: string;\n        @Prop({default: \"#858585\"}) menuColor: string;\n        @Prop({default: \"#232323\"}) hoverColor: string;\n        @Prop()markdwon:string;\n\n\n        get filterColor():string {\n            if (this.bgMenu === '#fafbfc') {\n                return '#232323'\n            } else {\n                return this.bgMenu\n            }\n        }\n\n        async insertImage(e:any){\n            const files = e.target.files || e.dataTransfer.files;\n            const file = files[0];\n            if (!files.length)\n                return;\n            let imgUrl = await this.uploadImage(file);\n            imgUrl = `![image](${imgUrl})`;\n            this.insertText(imgUrl)\n        }\n\n        /**\n         * 文章发布\n         */\n        goPublish(){\n            console.log(this.markdwon);\n        }\n\n        insertText(string:string) {\n            let content:any = document.querySelector('.vm-markdown-content');\n            insertText(content, string);\n            this.$emit('textChange', content.value)\n        }\n\n        uploadTable(content:any) {\n            this.$emit('textChange', content)\n        }\n\n        setLayout(type:any) {\n            const VmMarkdown:any = document.querySelector('.vm-markdown');\n            const VmMarkdownEdit:any = document.querySelector('.vm-markdown-edit');\n            switch (type) {\n                case 'default':\n                    VmMarkdownEdit.style.width = '50%';\n                    break;\n                case 'right':\n                    VmMarkdownEdit.style.width = '100%';\n                    break;\n                case 'left':\n                    VmMarkdownEdit.style.width = '0';\n                    break;\n                case 'zoom':\n                    if (VmMarkdown.style.position === 'fixed') {\n                        const parent:any = this.$parent;\n                        VmMarkdown.style.cssText = `\n                            width: ${parent.width};\n                            height: ${parent.height};\n                        `\n                    } else {\n                        VmMarkdown.style.cssText = `\n                            position: fixed;\n                            z-index: 999;\n                            left: 0;\n                            top: 0;\n                            margin: 0;\n                            width: 100%;\n                            height: 100%;\n                        `\n                    }\n                    break\n            }\n        }\n\n        mounted() {\n            let menu:any = document.querySelector('.vm-editor-menu');\n            menu.addEventListener('mouseover', (evt:any) => {\n                if (evt.target.tagName == 'I') {\n                    evt.target.style.color = this.hoverColor\n                }\n            });\n            menu.addEventListener('mouseout', (evt:any) => {\n                if (evt.target.tagName == 'I') {\n                    evt.target.style.color = ''\n                }\n            })\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .vm-editor-menu {\n        display: flex;\n        height: 40px;\n        box-sizing: border-box;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 15px;\n        border-radius: 4px 4px 0px 0px;\n        position: relative;\n\n        .command,\n        .vm-markdown-layout {\n            display: flex;\n        }\n\n        .line {\n            display: inline-block;\n            width: 1px;\n            height: 40px;\n            margin: 0 10px;\n            background-color: #eeeff1;\n        }\n    }\n\n    ul.vm-editor-ul {\n        padding: 0;\n        margin: 0;\n\n        li {\n            margin: 0;\n            padding: 5px 30px;\n            display: flex;\n            justify-content: center;\n\n            &:hover {\n                background: #f8f8f8;\n            }\n\n            h1 {\n                text-align: center;\n            }\n        }\n    }\n\n    .load-img {\n        display: inline-block;\n        z-index: 999;\n        cursor: pointer;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        opacity: 0;\n    }\n</style>\n"]}]}