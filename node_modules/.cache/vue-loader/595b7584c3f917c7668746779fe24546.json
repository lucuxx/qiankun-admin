{"remainingRequest":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/components/MarkDown/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/components/MarkDown/index.vue","mtime":1565252326088},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Prop, Watch} from \"vue-property-decorator\";\nimport VmMarkdownMenu from \"./vm-markdown-menu.vue\";\nimport marked from \"marked\";\nimport theme from \"./config/theme\";\n\n@Component({components: {VmMarkdownMenu}})\nexport default class VmMarkdown extends Vue {\n    @Prop({\n        type: Function, default() {\n            return () => {\n            };\n        }\n    }) uploadImage: any;\n    @Prop({default: \"default\"}) theme: string;\n    @Prop({default: \"900px\"}) width: string;\n    @Prop({default: \"500px\"}) height: string;\n    @Prop({default: \"\"}) defaultText: string;\n    markdwon: string = \"\";\n\n    private markdString: string = \"\";\n    private htmlString: string = \"\";\n\n    get themeValue() {\n        if (theme.hasOwnProperty(this.theme)) {\n            return this.$lo.get(theme, this.theme);\n        } else {\n            return this.$lo.get(theme, \"dark\");\n        }\n    }\n\n    publish(){\n        this.$emit('goPublish')\n    }\n\n    @Watch(\"defaultText\")\n    changeDefaultText(val: any) {\n        this.markdString = val;\n    }\n\n    @Watch(\"markdString\") changeMarkdwon(value: any) {\n        console.log(value);\n        this.markdwon = value;\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: true,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false\n        });\n        this.htmlString = marked(value);\n        this.$emit(\"html-change\", value);\n    }\n\n    updateHtmlString(data: any) {\n        this.markdString = data;\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/MarkDown","sourcesContent":["<template>\n    <div class=\"vm-markdown\" :style=\"{width: width, height:height}\">\n        <vm-markdown-menu\n                :bgMenu=\"themeValue.bgMenu\"\n                :menuBorder=\"themeValue.menuBorder\"\n                :menuColor=\"themeValue.menuColor\"\n                :hoverColor=\"themeValue.hoverColor\"\n                :uploadImage=\"uploadImage\"\n                @textChange=\"updateHtmlString\"\n                :markdwon=\"markdwon\"\n                @publish=\"publish\"\n        >\n        </vm-markdown-menu>\n        <div class=\"content\">\n            <div class=\"vm-markdown-edit\" :style=\"{backgroundColor: themeValue.bgLeft}\">\n                <label>\n                    <textarea class=\"vm-markdown-content\" v-model=\"markdString\"></textarea>\n                </label>\n            </div>\n            <div class=\"markdown-body\" v-html=\"htmlString\" :style=\"{backgroundColor: themeValue.bgRight}\"></div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\n    import {Vue, Component, Prop, Watch} from \"vue-property-decorator\";\n    import VmMarkdownMenu from \"./vm-markdown-menu.vue\";\n    import marked from \"marked\";\n    import theme from \"./config/theme\";\n\n    @Component({components: {VmMarkdownMenu}})\n    export default class VmMarkdown extends Vue {\n        @Prop({\n            type: Function, default() {\n                return () => {\n                };\n            }\n        }) uploadImage: any;\n        @Prop({default: \"default\"}) theme: string;\n        @Prop({default: \"900px\"}) width: string;\n        @Prop({default: \"500px\"}) height: string;\n        @Prop({default: \"\"}) defaultText: string;\n        markdwon: string = \"\";\n\n        private markdString: string = \"\";\n        private htmlString: string = \"\";\n\n        get themeValue() {\n            if (theme.hasOwnProperty(this.theme)) {\n                return this.$lo.get(theme, this.theme);\n            } else {\n                return this.$lo.get(theme, \"dark\");\n            }\n        }\n\n        publish(){\n            this.$emit('goPublish')\n        }\n\n        @Watch(\"defaultText\")\n        changeDefaultText(val: any) {\n            this.markdString = val;\n        }\n\n        @Watch(\"markdString\") changeMarkdwon(value: any) {\n            console.log(value);\n            this.markdwon = value;\n            marked.setOptions({\n                renderer: new marked.Renderer(),\n                gfm: true,\n                tables: true,\n                breaks: true,\n                pedantic: false,\n                sanitize: false,\n                smartLists: true,\n                smartypants: false\n            });\n            this.htmlString = marked(value);\n            this.$emit(\"html-change\", value);\n        }\n\n        updateHtmlString(data: any) {\n            this.markdString = data;\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    @import url('./assets/iconfont/iconfont.css');\n\n    .vm-markdown {\n        background-color: white;\n        border-radius: 4px;\n        min-width: 700px;\n        min-height: 300px;\n        overflow: hidden;\n\n        .content {\n            display: flex;\n            position: relative;\n            box-sizing: border-box;\n            overflow: hidden;\n            height: calc(100% - 40px);\n            width: 100%;\n            text-align: left;\n            font-size: 16px;\n            border: 1px solid #eeeff1;\n            border-top: none;\n\n            .vm-markdown-edit,\n            .render {\n                height: 100%;\n            }\n\n            .vm-markdown-edit {\n                width: 50%;\n                box-sizing: border-box;\n                outline: none;\n                border-right: 1px solid #eeeff1;\n                flex-shrink: 0;\n\n                .vm-markdown-content {\n                    width: 100%;\n                    height: 100%;\n                    padding: 15px;\n                    overflow: auto;\n                    box-sizing: border-box;\n                    resize: none;\n                    outline: none;\n                    border: none;\n                    background-color: transparent;\n                    font-size: 14px;\n                    color: #232323;\n                    line-height: 24px;\n                }\n            }\n\n            .markdown-body {\n                padding: 15px;\n                overflow: auto;\n                flex-grow: 1;\n                word-wrap: break-word;\n            }\n        }\n    }\n\n</style>\n\n"]}]}