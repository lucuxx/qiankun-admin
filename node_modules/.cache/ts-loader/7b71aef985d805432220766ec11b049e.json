{"remainingRequest":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/babel-loader/lib/index.js!/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/ts-loader/index.js??ref--13-2!/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/store/index.ts","dependencies":[{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/store/index.ts","mtime":1565166692872},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport vuex from 'vuex';\nimport user from \"./modules/user\";\nimport article from \"./modules/article\";\nVue.use(vuex);\nexport default new vuex.Store({\n  // 由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。\n  // 为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。\n  // 每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\n  modules: {\n    user: user,\n    article: article\n  },\n  getters: {\n    // data: state => state.data.data,\n    userInfo: function userInfo(state) {\n      return state.user.user;\n    },\n    articleInfo: function articleInfo(state) {\n      return state.article.articleData;\n    },\n    currentArticle: function currentArticle(state) {\n      return state.article.currentArticle;\n    }\n  }\n});",{"version":3,"sources":["/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/store/index.ts"],"names":[],"mappings":"AAAA,OAAO,GAAP,MAAgB,KAAhB;AACA,OAAO,IAAP,MAAiB,MAAjB;AACA,OAAO,IAAP;AACA,OAAO,OAAP;AAGA,GAAG,CAAC,GAAJ,CAAQ,IAAR;AAEA,eAAe,IAAI,IAAI,CAAC,KAAT,CAAe;AAC9B;AACA;AACA;AACI,EAAA,OAAO,EAAE;AACL,IAAA,IAAI,EAAJ,IADK;AAEL,IAAA,OAAO,EAAP;AAFK,GAJiB;AAQ1B,EAAA,OAAO,EAAE;AACL;AACA,IAAA,QAAQ,EAAE,kBAAC,KAAD;AAAA,aAAqB,KAAK,CAAC,IAAN,CAAW,IAAhC;AAAA,KAFL;AAGL,IAAA,WAAW,EAAE,qBAAC,KAAD;AAAA,aAAqB,KAAK,CAAC,OAAN,CAAc,WAAnC;AAAA,KAHR;AAIL,IAAA,cAAc,EAAE,wBAAC,KAAD;AAAA,aAAqB,KAAK,CAAC,OAAN,CAAc,cAAnC;AAAA;AAJX;AARiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\nimport vuex from 'vuex';\nimport user from './modules/user';\nimport article from './modules/article';\n\n\nVue.use(vuex);\n\nexport default new vuex.Store({\n// 由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。\n// 为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。\n// 每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：\n    modules: {\n        user,\n        article,\n    },\n    getters: {\n        // data: state => state.data.data,\n        userInfo: (state: any): any => state.user.user,\n        articleInfo: (state: any): any => state.article.articleData,\n        currentArticle: (state: any): any => state.article.currentArticle,\n        // modular: state => state.data.data[0],\n        // function:state => state.data.data[1],\n        // shoppingData: state => state.data.shoppingData.data.productList,\n    },\n});\n"],"sourceRoot":""}]}