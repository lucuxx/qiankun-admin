{"remainingRequest":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/babel-loader/lib/index.js!/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/ts-loader/index.js??ref--13-2!/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/views/other/login.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/views/other/login.vue","mtime":1564990491737},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.typed.float32-array\";\nimport _inheritsLoose from \"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport * as tslib_1 from \"tslib\";\nimport { Vue, Component } from \"vue-property-decorator\";\n\nvar LoginNav =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inheritsLoose(LoginNav, _Vue);\n\n  function LoginNav() {\n    var _this;\n\n    _this = _Vue.apply(this, arguments) || this;\n    _this.userForm = {\n      email: \"\",\n      password: \"\"\n    };\n    _this.loginShow = false;\n    return _this;\n  }\n\n  var _proto = LoginNav.prototype;\n\n  _proto.goLogin = function goLogin() {\n    var _this2 = this;\n\n    this.$api.login(this.userForm).then(function (req) {\n      var _req$data = req.data,\n          code = _req$data.code,\n          data = _req$data.data;\n\n      if (code === 0) {\n        _this2.$router.push({\n          path: \"/\"\n        });\n      } else {\n        _this2.$message.error(data.message);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  _proto.mounted = function mounted() {\n    var _this3 = this;\n\n    var sakura_point_vsh = \"\\nuniform mat4 uProjection;\\nuniform mat4 uModelview;\\nuniform vec3 uResolution;\\nuniform vec3 uOffset;\\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\\n\\nattribute vec3 aPosition;\\nattribute vec3 aEuler;\\nattribute vec2 aMisc; //x:size, y:fade\\n\\nvarying vec3 pposition;\\nvarying float psize;\\nvarying float palpha;\\nvarying float pdist;\\n\\n//varying mat3 rotMat;\\nvarying vec3 normX;\\nvarying vec3 normY;\\nvarying vec3 normZ;\\nvarying vec3 normal;\\n\\nvarying float diffuse;\\nvarying float specular;\\nvarying float rstop;\\nvarying float distancefade;\\n\\nvoid main(void) {\\n    // Projection is based on vertical angle\\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\\n    gl_Position = uProjection * pos;\\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\\n\\n    pposition = pos.xyz;\\n    psize = aMisc.x;\\n    pdist = length(pos.xyz);\\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\\n\\n    vec3 elrsn = sin(aEuler);\\n    vec3 elrcs = cos(aEuler);\\n    mat3 rotx = mat3(\\n        1.0, 0.0, 0.0,\\n        0.0, elrcs.x, elrsn.x,\\n        0.0, -elrsn.x, elrcs.x\\n    );\\n    mat3 roty = mat3(\\n        elrcs.y, 0.0, -elrsn.y,\\n        0.0, 1.0, 0.0,\\n        elrsn.y, 0.0, elrcs.y\\n    );\\n    mat3 rotz = mat3(\\n        elrcs.z, elrsn.z, 0.0,\\n        -elrsn.z, elrcs.z, 0.0,\\n        0.0, 0.0, 1.0\\n    );\\n    mat3 rotmat = rotx * roty * rotz;\\n    normal = rotmat[2];\\n\\n    mat3 trrotm = mat3(\\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\\n    );\\n    normX = trrotm[0];\\n    normY = trrotm[1];\\n    normZ = trrotm[2];\\n\\n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\\n\\n    float tmpdfs = dot(lit, normal);\\n    if(tmpdfs < 0.0) {\\n        normal = -normal;\\n        tmpdfs = dot(lit, normal);\\n    }\\n    diffuse = 0.4 + tmpdfs;\\n\\n    vec3 eyev = normalize(-pos.xyz);\\n    if(dot(eyev, normal) > 0.0) {\\n        vec3 hv = normalize(eyev + lit);\\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\\n    }\\n    else {\\n        specular = 0.0;\\n    }\\n\\n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\\n    rstop = pow(rstop, 0.5);\\n    //-0.69315 = ln(0.5)\\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\\n}\";\n    var sakura_point_fsh = \"\\n#ifdef GL_ES\\n//precision mediump float;\\nprecision highp float;\\n#endif\\n\\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\\n\\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\\n\\nvarying vec3 pposition;\\nvarying float psize;\\nvarying float palpha;\\nvarying float pdist;\\n\\n//varying mat3 rotMat;\\nvarying vec3 normX;\\nvarying vec3 normY;\\nvarying vec3 normZ;\\nvarying vec3 normal;\\n\\nvarying float diffuse;\\nvarying float specular;\\nvarying float rstop;\\nvarying float distancefade;\\n\\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\\n    vec2 lp = (p - o) / r;\\n    return length(lp) - 1.0;\\n}\\n\\nvoid main(void) {\\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\\n    vec3 d = vec3(0.0, 0.0, -1.0);\\n    float nd = normZ.z; //dot(-normZ, d);\\n    if(abs(nd) < 0.0001) discard;\\n\\n    float np = dot(normZ, p);\\n    vec3 tp = p + d * np / nd;\\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\\n\\n    //angle = 15 degree\\n    const float flwrsn = 0.258819045102521;\\n    const float flwrcs = 0.965925826289068;\\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\\n\\n    float r;\\n    if(flwrp.x < 0.0) {\\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\\n    }\\n    else {\\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\\n    }\\n\\n    if(r > rstop) discard;\\n\\n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\\n    col *= vec3(1.0, grady, grady);\\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\\n    col = col * diffuse + specular;\\n\\n    col = mix(fadeCol, col, distancefade);\\n\\n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\\n\\n    gl_FragColor = vec4(col * 0.5, alpha);\\n}\";\n    var fx_common_vsh = \"\\nuniform vec3 uResolution;\\nattribute vec2 aPosition;\\n\\nvarying vec2 texCoord;\\nvarying vec2 screenCoord;\\n\\nvoid main(void) {\\n    gl_Position = vec4(aPosition, 0.0, 1.0);\\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\\n}\";\n    var bg_fsh = \"\\n#ifdef GL_ES\\n//precision mediump float;\\nprecision highp float;\\n#endif\\n\\nuniform vec2 uTimes;\\n\\nvarying vec2 texCoord;\\nvarying vec2 screenCoord;\\n\\nvoid main(void) {\\n    vec3 col;\\n    float c;\\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\\n    gl_FragColor = vec4(col * 0.5, 1.0);\\n}\";\n    var fx_brightbuf_fsh = \"\\n#ifdef GL_ES\\n//precision mediump float;\\nprecision highp float;\\n#endif\\nuniform sampler2D uSrc;\\nuniform vec2 uDelta;\\n\\nvarying vec2 texCoord;\\nvarying vec2 screenCoord;\\n\\nvoid main(void) {\\n    vec4 col = texture2D(uSrc, texCoord);\\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\\n}\";\n    var fx_dirblur_r4_fsh = \"\\n#ifdef GL_ES\\n//precision mediump float;\\nprecision highp float;\\n#endif\\nuniform sampler2D uSrc;\\nuniform vec2 uDelta;\\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\\n\\nvarying vec2 texCoord;\\nvarying vec2 screenCoord;\\n\\nvoid main(void) {\\n    vec4 col = texture2D(uSrc, texCoord);\\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\\n    gl_FragColor = col / 5.0;\\n}\";\n    var pp_final_vsh = \"\\nuniform vec3 uResolution;\\nattribute vec2 aPosition;\\nvarying vec2 texCoord;\\nvarying vec2 screenCoord;\\nvoid main(void) {\\n    gl_Position = vec4(aPosition, 0.0, 1.0);\\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\\n}\";\n    var pp_final_fsh = \"\\n#ifdef GL_ES\\n//precision mediump float;\\nprecision highp float;\\n#endif\\nuniform sampler2D uSrc;\\nuniform sampler2D uBloom;\\nuniform vec2 uDelta;\\nvarying vec2 texCoord;\\nvarying vec2 screenCoord;\\nvoid main(void) {\\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\\n    vec4 bloomcol = texture2D(uBloom, texCoord);\\n    vec4 col;\\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\\n\\n    gl_FragColor = vec4(col.rgb, 1.0);\\n    gl_FragColor.a = 1.0;\\n}\"; // Utilities\n\n    var Vector3 = {};\n    var Matrix44 = {};\n\n    Vector3.create = function (x, y, z) {\n      return {\n        x: x,\n        y: y,\n        z: z\n      };\n    };\n\n    Vector3.dot = function (v0, v1) {\n      return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n    };\n\n    Vector3.cross = function (v, v0, v1) {\n      v.x = v0.y * v1.z - v0.z * v1.y;\n      v.y = v0.z * v1.x - v0.x * v1.z;\n      v.z = v0.x * v1.y - v0.y * v1.x;\n    };\n\n    Vector3.normalize = function (v) {\n      var l = v.x * v.x + v.y * v.y + v.z * v.z;\n\n      if (l > 0.00001) {\n        l = 1.0 / Math.sqrt(l);\n        v.x *= l;\n        v.y *= l;\n        v.z *= l;\n      }\n    };\n\n    Vector3.arrayForm = function (v) {\n      if (v.array) {\n        v.array[0] = v.x;\n        v.array[1] = v.y;\n        v.array[2] = v.z;\n      } else {\n        v.array = new Float32Array([v.x, v.y, v.z]);\n      }\n\n      return v.array;\n    };\n\n    Matrix44.createIdentity = function () {\n      return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n    };\n\n    Matrix44.loadProjection = function (m, aspect, vdeg, near, far) {\n      var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0;\n      var w = h * aspect;\n      m[0] = 2.0 * near / w;\n      m[1] = 0.0;\n      m[2] = 0.0;\n      m[3] = 0.0;\n      m[4] = 0.0;\n      m[5] = 2.0 * near / h;\n      m[6] = 0.0;\n      m[7] = 0.0;\n      m[8] = 0.0;\n      m[9] = 0.0;\n      m[10] = -(far + near) / (far - near);\n      m[11] = -1.0;\n      m[12] = 0.0;\n      m[13] = 0.0;\n      m[14] = -2.0 * far * near / (far - near);\n      m[15] = 0.0;\n    };\n\n    Matrix44.loadLookAt = function (m, vpos, vlook, vup) {\n      var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z);\n      Vector3.normalize(frontv);\n      var sidev = Vector3.create(1.0, 0.0, 0.0);\n      Vector3.cross(sidev, vup, frontv);\n      Vector3.normalize(sidev);\n      var topv = Vector3.create(1.0, 0.0, 0.0);\n      Vector3.cross(topv, frontv, sidev);\n      Vector3.normalize(topv);\n      m[0] = sidev.x;\n      m[1] = topv.x;\n      m[2] = frontv.x;\n      m[3] = 0.0;\n      m[4] = sidev.y;\n      m[5] = topv.y;\n      m[6] = frontv.y;\n      m[7] = 0.0;\n      m[8] = sidev.z;\n      m[9] = topv.z;\n      m[10] = frontv.z;\n      m[11] = 0.0;\n      m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n      m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n      m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n      m[15] = 1.0;\n    }; //\n\n\n    var timeInfo = {\n      start: 0,\n      prev: 0,\n      delta: 0,\n      elapsed: 0 // Number(sec)\n\n    }; //\n\n    var gl;\n    var renderSpec = {\n      width: 0,\n      height: 0,\n      aspect: 1,\n      array: new Float32Array(3),\n      halfWidth: 0,\n      halfHeight: 0,\n      halfArray: new Float32Array(3) // and some render targets. see setViewport()\n\n    };\n\n    renderSpec.setSize = function (w, h) {\n      renderSpec.width = w;\n      renderSpec.height = h;\n      renderSpec.aspect = renderSpec.width / renderSpec.height;\n      renderSpec.array[0] = renderSpec.width;\n      renderSpec.array[1] = renderSpec.height;\n      renderSpec.array[2] = renderSpec.aspect;\n      renderSpec.halfWidth = Math.floor(w / 2);\n      renderSpec.halfHeight = Math.floor(h / 2);\n      renderSpec.halfArray[0] = renderSpec.halfWidth;\n      renderSpec.halfArray[1] = renderSpec.halfHeight;\n      renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n    };\n\n    function deleteRenderTarget(rt) {\n      gl.deleteFramebuffer(rt.frameBuffer);\n      gl.deleteRenderbuffer(rt.renderBuffer);\n      gl.deleteTexture(rt.texture);\n    }\n\n    function createRenderTarget(w, h) {\n      var ret = {\n        width: w,\n        height: h,\n        sizeArray: new Float32Array([w, h, w / h]),\n        dtxArray: new Float32Array([1.0 / w, 1.0 / h])\n      };\n      ret.frameBuffer = gl.createFramebuffer();\n      ret.renderBuffer = gl.createRenderbuffer();\n      ret.texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0);\n      gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      return ret;\n    }\n\n    function compileShader(shtype, shsrc) {\n      var retsh = gl.createShader(shtype);\n      gl.shaderSource(retsh, shsrc);\n      gl.compileShader(retsh);\n\n      if (!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n        var errlog = gl.getShaderInfoLog(retsh);\n        gl.deleteShader(retsh);\n        console.error(errlog);\n        return null;\n      }\n\n      return retsh;\n    }\n\n    function createShader(vtxsrc, frgsrc, uniformlist, attrlist) {\n      var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc);\n      var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n\n      if (vsh == null || fsh == null) {\n        return null;\n      }\n\n      var prog = gl.createProgram();\n      gl.attachShader(prog, vsh);\n      gl.attachShader(prog, fsh);\n      gl.deleteShader(vsh);\n      gl.deleteShader(fsh);\n      gl.linkProgram(prog);\n\n      if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n        var errlog = gl.getProgramInfoLog(prog);\n        console.error(errlog);\n        return null;\n      }\n\n      if (uniformlist) {\n        prog.uniforms = {};\n\n        for (var i = 0; i < uniformlist.length; i++) {\n          prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]);\n        }\n      }\n\n      if (attrlist) {\n        prog.attributes = {};\n\n        for (var _i = 0; _i < attrlist.length; _i++) {\n          var attr = attrlist[_i];\n          prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n        }\n      }\n\n      return prog;\n    }\n\n    function useShader(prog) {\n      gl.useProgram(prog);\n\n      for (var attr in prog.attributes) {\n        gl.enableVertexAttribArray(prog.attributes[attr]);\n      }\n    }\n\n    function unuseShader(prog) {\n      for (var attr in prog.attributes) {\n        gl.disableVertexAttribArray(prog.attributes[attr]);\n      }\n\n      gl.useProgram(null);\n    } /////\n\n\n    var projection = {\n      angle: 60,\n      nearfar: new Float32Array([0.1, 100.0]),\n      matrix: Matrix44.createIdentity()\n    };\n    var camera = {\n      position: Vector3.create(0, 0, 100),\n      lookat: Vector3.create(0, 0, 0),\n      up: Vector3.create(0, 1, 0),\n      dof: Vector3.create(10.0, 4.0, 8.0),\n      matrix: Matrix44.createIdentity()\n    };\n    var pointFlower = {}; // var meshFlower = {};\n\n    var sceneStandBy = false;\n\n    var BlossomParticle = function BlossomParticle() {\n      this.velocity = new Array(3);\n      this.rotation = new Array(3);\n      this.position = new Array(3);\n      this.euler = new Array(3);\n      this.size = 1.0;\n      this.alpha = 1.0;\n      this.zkey = 0.0;\n    };\n\n    BlossomParticle.prototype.setVelocity = function (vx, vy, vz) {\n      this.velocity[0] = vx;\n      this.velocity[1] = vy;\n      this.velocity[2] = vz;\n    };\n\n    BlossomParticle.prototype.setRotation = function (rx, ry, rz) {\n      this.rotation[0] = rx;\n      this.rotation[1] = ry;\n      this.rotation[2] = rz;\n    };\n\n    BlossomParticle.prototype.setPosition = function (nx, ny, nz) {\n      this.position[0] = nx;\n      this.position[1] = ny;\n      this.position[2] = nz;\n    };\n\n    BlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) {\n      this.euler[0] = rx;\n      this.euler[1] = ry;\n      this.euler[2] = rz;\n    };\n\n    BlossomParticle.prototype.setSize = function (s) {\n      this.size = s;\n    };\n\n    BlossomParticle.prototype.update = function (dt, et) {\n      this.position[0] += this.velocity[0] * dt;\n      this.position[1] += this.velocity[1] * dt;\n      this.position[2] += this.velocity[2] * dt;\n      this.euler[0] += this.rotation[0] * dt;\n      this.euler[1] += this.rotation[1] * dt;\n      this.euler[2] += this.rotation[2] * dt;\n    };\n\n    function createPointFlowers() {\n      // get point sizes\n      var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n      renderSpec.pointSize = {\n        min: prm[0],\n        max: prm[1]\n      };\n      var vtxsrc = sakura_point_vsh;\n      var frgsrc = sakura_point_fsh;\n      pointFlower.program = createShader(vtxsrc, frgsrc, [\"uProjection\", \"uModelview\", \"uResolution\", \"uOffset\", \"uDOF\", \"uFade\"], [\"aPosition\", \"aEuler\", \"aMisc\"]);\n      useShader(pointFlower.program);\n      pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n      pointFlower.fader = Vector3.create(0.0, 10.0, 0.0); // paramerters: velocity[3], rotate[3]\n\n      pointFlower.numFlowers = 1600;\n      pointFlower.particles = new Array(pointFlower.numFlowers); // vertex attributes {position[3], euler_xyz[3], size[1]}\n\n      pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2));\n      pointFlower.positionArrayOffset = 0;\n      pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n      pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n      pointFlower.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n      unuseShader(pointFlower.program);\n\n      for (var i = 0; i < pointFlower.numFlowers; i++) {\n        pointFlower.particles[i] = new BlossomParticle();\n      }\n    }\n\n    function initPointFlowers() {\n      //area\n      pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n      pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n      pointFlower.fader.x = 10.0; //env fade start\n\n      pointFlower.fader.y = pointFlower.area.z; //env fade half\n\n      pointFlower.fader.z = 0.1; //near fade start\n      //particles\n\n      var PI2 = Math.PI * 2.0;\n      var tmpv3 = Vector3.create(0, 0, 0);\n      var tmpv = 0;\n\n      var symmetryrand = function symmetryrand() {\n        return Math.random() * 2.0 - 1.0;\n      };\n\n      for (var i = 0; i < pointFlower.numFlowers; i++) {\n        var tmpprtcl = pointFlower.particles[i]; //velocity\n\n        tmpv3.x = symmetryrand() * 0.3 + 0.8;\n        tmpv3.y = symmetryrand() * 0.2 - 1.0;\n        tmpv3.z = symmetryrand() * 0.3 + 0.5;\n        Vector3.normalize(tmpv3);\n        tmpv = 2.0 + Math.random() * 1.0;\n        tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv); //rotation\n\n        tmpprtcl.setRotation(symmetryrand() * PI2 * 0.5, symmetryrand() * PI2 * 0.5, symmetryrand() * PI2 * 0.5); //position\n\n        tmpprtcl.setPosition(symmetryrand() * pointFlower.area.x, symmetryrand() * pointFlower.area.y, symmetryrand() * pointFlower.area.z); //euler\n\n        tmpprtcl.setEulerAngles(Math.random() * Math.PI * 2.0, Math.random() * Math.PI * 2.0, Math.random() * Math.PI * 2.0); //size\n\n        tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n      }\n    }\n\n    function renderPointFlowers() {\n      //update\n      var PI2 = Math.PI * 2.0; // var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n\n      var repeatPos = function repeatPos(prt, cmp, limit) {\n        if (Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n          //out of area\n          if (prt.position[cmp] > 0) {\n            prt.position[cmp] -= limit * 2.0;\n          } else {\n            prt.position[cmp] += limit * 2.0;\n          }\n        }\n      };\n\n      var repeatEuler = function repeatEuler(prt, cmp) {\n        prt.euler[cmp] = prt.euler[cmp] % PI2;\n\n        if (prt.euler[cmp] < 0.0) {\n          prt.euler[cmp] += PI2;\n        }\n      };\n\n      for (var i = 0; i < pointFlower.numFlowers; i++) {\n        var prtcl = pointFlower.particles[i];\n        prtcl.update(timeInfo.delta, timeInfo.elapsed);\n        repeatPos(prtcl, 0, pointFlower.area.x);\n        repeatPos(prtcl, 1, pointFlower.area.y);\n        repeatPos(prtcl, 2, pointFlower.area.z);\n        repeatEuler(prtcl, 0);\n        repeatEuler(prtcl, 1);\n        repeatEuler(prtcl, 2);\n        prtcl.alpha = 1.0; //(pointFlower.area.z - prtcl.position[2]) * 0.5;\n\n        prtcl.zkey = camera.matrix[2] * prtcl.position[0] + camera.matrix[6] * prtcl.position[1] + camera.matrix[10] * prtcl.position[2] + camera.matrix[14];\n      } // sort\n\n\n      pointFlower.particles.sort(function (p0, p1) {\n        return p0.zkey - p1.zkey;\n      }); // update data\n\n      var ipos = pointFlower.positionArrayOffset;\n      var ieuler = pointFlower.eulerArrayOffset;\n      var imisc = pointFlower.miscArrayOffset;\n\n      for (var _i2 = 0; _i2 < pointFlower.numFlowers; _i2++) {\n        var _prtcl = pointFlower.particles[_i2];\n        pointFlower.dataArray[ipos] = _prtcl.position[0];\n        pointFlower.dataArray[ipos + 1] = _prtcl.position[1];\n        pointFlower.dataArray[ipos + 2] = _prtcl.position[2];\n        ipos += 3;\n        pointFlower.dataArray[ieuler] = _prtcl.euler[0];\n        pointFlower.dataArray[ieuler + 1] = _prtcl.euler[1];\n        pointFlower.dataArray[ieuler + 2] = _prtcl.euler[2];\n        ieuler += 3;\n        pointFlower.dataArray[imisc] = _prtcl.size;\n        pointFlower.dataArray[imisc + 1] = _prtcl.alpha;\n        imisc += 2;\n      } //draw\n\n\n      gl.enable(gl.BLEND); //gl.disable(gl.DEPTH_TEST);\n\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n      var prog = pointFlower.program;\n      useShader(prog);\n      gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n      gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n      gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n      gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n      gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n      gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n      gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n      gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT);\n      gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT); // doubler\n\n      for (var _i3 = 1; _i3 < 2; _i3++) {\n        var zpos = _i3 * -2.0;\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        pointFlower.offset[0] = pointFlower.area.x * -1.0;\n        pointFlower.offset[1] = pointFlower.area.y * 1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        pointFlower.offset[0] = pointFlower.area.x * 1.0;\n        pointFlower.offset[1] = pointFlower.area.y * -1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n        pointFlower.offset[0] = pointFlower.area.x * 1.0;\n        pointFlower.offset[1] = pointFlower.area.y * 1.0;\n        pointFlower.offset[2] = pointFlower.area.z * zpos;\n        gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n        gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n      } //main\n\n\n      pointFlower.offset[0] = 0.0;\n      pointFlower.offset[1] = 0.0;\n      pointFlower.offset[2] = 0.0;\n      gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n      gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n      unuseShader(prog);\n      gl.enable(gl.DEPTH_TEST);\n      gl.disable(gl.BLEND);\n    } // effects\n    //common util\n\n\n    function createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) {\n      var ret = {};\n      var unifs = [\"uResolution\", \"uSrc\", \"uDelta\"];\n\n      if (exunifs) {\n        unifs = unifs.concat(exunifs);\n      }\n\n      var attrs = [\"aPosition\"];\n\n      if (exattrs) {\n        attrs = attrs.concat(exattrs);\n      }\n\n      ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n      useShader(ret.program);\n      ret.dataArray = new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]);\n      ret.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n      unuseShader(ret.program);\n      return ret;\n    }\n\n    function useEffect(fxobj, srctex) {\n      var prog = fxobj.program;\n      useShader(prog);\n      gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n\n      if (srctex != null) {\n        gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n        gl.uniform1i(prog.uniforms.uSrc, 0);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n      }\n    }\n\n    function drawEffect(fxobj) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n      gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    function unuseEffect(fxobj) {\n      unuseShader(fxobj.program);\n    }\n\n    var effectLib = {};\n\n    function createEffectLib() {\n      var vtxsrc, frgsrc; //common\n\n      var cmnvtxsrc = fx_common_vsh; //background\n\n      frgsrc = bg_fsh;\n      effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, [\"uTimes\"], null); // make brightpixels buffer\n\n      frgsrc = fx_brightbuf_fsh;\n      effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null); // direction blur\n\n      frgsrc = fx_dirblur_r4_fsh;\n      effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, [\"uBlurDir\"], null); //final composite\n\n      vtxsrc = pp_final_vsh;\n      frgsrc = pp_final_fsh; // console.log('frgsrc :',frgsrc )\n\n      effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, [\"uBloom\"], null);\n    } // background\n\n\n    function createBackground() {//console.log(\"create background\");\n    }\n\n    function initBackground() {//console.log(\"init background\");\n    }\n\n    function renderBackground() {\n      gl.disable(gl.DEPTH_TEST);\n      useEffect(effectLib.sceneBg, null);\n      gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta);\n      drawEffect(effectLib.sceneBg);\n      unuseEffect(effectLib.sceneBg);\n      gl.enable(gl.DEPTH_TEST);\n    } // post process\n    // var postProcess = {};\n\n\n    function createPostProcess() {//console.log(\"create post process\");\n    }\n\n    function initPostProcess() {//console.log(\"init post process\");\n    }\n\n    function renderPostProcess() {\n      // gl.enable(gl.TEXTURE_2D);\n      gl.disable(gl.DEPTH_TEST);\n\n      var bindRT = function bindRT(rt, isclear) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n        gl.viewport(0, 0, rt.width, rt.height);\n\n        if (isclear) {\n          gl.clearColor(0, 0, 0, 0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n      }; //make bright buff\n\n\n      bindRT(renderSpec.wHalfRT0, true);\n      useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n      drawEffect(effectLib.mkBrightBuf);\n      unuseEffect(effectLib.mkBrightBuf); // make bloom\n\n      for (var i = 0; i < 2; i++) {\n        var p = 1.5 + 1 * i;\n        var s = 2.0 + 1 * i;\n        bindRT(renderSpec.wHalfRT1, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n        bindRT(renderSpec.wHalfRT0, true);\n        useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n        gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s);\n        drawEffect(effectLib.dirBlur);\n        unuseEffect(effectLib.dirBlur);\n      } //display\n\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      useEffect(effectLib.finalComp, renderSpec.mainRT);\n      gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n      gl.activeTexture(gl.TEXTURE1);\n      gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n      drawEffect(effectLib.finalComp);\n      unuseEffect(effectLib.finalComp);\n      gl.enable(gl.DEPTH_TEST);\n    } /////\n    // var SceneEnv = {};\n\n\n    function createScene() {\n      createEffectLib();\n      createBackground();\n      createPointFlowers();\n      createPostProcess();\n      sceneStandBy = true;\n    }\n\n    function initScene() {\n      initBackground();\n      initPointFlowers();\n      initPostProcess(); //camera.position.z = 17.320508;\n\n      camera.position.z = pointFlower.area.z + projection.nearfar[0];\n      projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0;\n      Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]);\n    }\n\n    function renderScene() {\n      //draw\n      Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up);\n      gl.enable(gl.DEPTH_TEST); //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n      gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n      gl.clearColor(0.005, 0, 0.05, 0);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      renderBackground();\n      renderPointFlowers();\n      renderPostProcess();\n    } /////\n\n\n    function onResize(e) {\n      makeCanvasFullScreen(document.getElementById(\"sakura\"));\n      setViewports();\n\n      if (sceneStandBy) {\n        initScene();\n      }\n    }\n\n    function setViewports() {\n      renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n      gl.clearColor(0.2, 0.2, 0.5, 1.0);\n      gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n\n      var rtfunc = function rtfunc(rtname, rtw, rth) {\n        var rt = renderSpec[rtname];\n\n        if (rt) {\n          deleteRenderTarget(rt);\n        }\n\n        renderSpec[rtname] = createRenderTarget(rtw, rth);\n      };\n\n      rtfunc(\"mainRT\", renderSpec.width, renderSpec.height);\n      rtfunc(\"wFullRT0\", renderSpec.width, renderSpec.height);\n      rtfunc(\"wFullRT1\", renderSpec.width, renderSpec.height);\n      rtfunc(\"wHalfRT0\", renderSpec.halfWidth, renderSpec.halfHeight);\n      rtfunc(\"wHalfRT1\", renderSpec.halfWidth, renderSpec.halfHeight);\n    }\n\n    function render() {\n      renderScene();\n    }\n\n    var animating = true;\n\n    function animate() {\n      var curdate = new Date();\n      timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n      timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n      timeInfo.prev = curdate;\n\n      if (animating) {\n        requestAnimationFrame(animate);\n      }\n\n      render();\n    }\n\n    function makeCanvasFullScreen(canvas) {\n      var b = document.body;\n      var d = document.documentElement;\n      var fullw = Math.max(b.clientWidth, b.scrollWidth, d.scrollWidth, d.clientWidth);\n      var fullh = Math.max(b.clientHeight, b.scrollHeight, d.scrollHeight, d.clientHeight);\n      canvas.width = fullw;\n      canvas.height = fullh;\n    } // 保证每次都执行\n\n\n    var canvas = document.getElementById(\"sakura\");\n\n    try {\n      makeCanvasFullScreen(canvas);\n      gl = canvas.getContext(\"experimental-webgl\");\n    } catch (e) {\n      alert(\"WebGL not supported.\" + e);\n      console.error(e);\n      return;\n    }\n\n    window.addEventListener(\"resize\", onResize);\n    setViewports();\n    createScene();\n    initScene();\n    timeInfo.start = new Date();\n    timeInfo.prev = timeInfo.start;\n    animate(); //set window.requestAnimationFrame\n\n    (function (w, r) {\n      w[\"r\" + r] = w[\"r\" + r] || w[\"webkitR\" + r] || w[\"mozR\" + r] || w[\"msR\" + r] || w[\"oR\" + r] || function (c) {\n        w.setTimeout(c, 1000 / 60);\n      };\n    })(window, \"equestAnimationFrame\");\n\n    setTimeout(function () {\n      _this3.loginShow = true;\n    }, 500);\n  };\n\n  return LoginNav;\n}(Vue);\n\nLoginNav = tslib_1.__decorate([Component], LoginNav);\nexport default LoginNav;",{"version":3,"sources":["/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/views/other/login.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component} from \"vue-property-decorator\";\n\n@Component\nexport default class LoginNav extends Vue {\n    protected userForm: Types.UserItem = {\n        email: \"\",\n        password: \"\",\n    };\n    protected loginShow: boolean = false;\n\n    protected goLogin():void  {\n        this.$api.login(this.userForm).then((req: Types.InterfaceData) => {\n            const {code, data} = req.data;\n            if (code === 0) {\n                this.$router.push({path: \"/\"});\n            } else {\n                this.$message.error(data.message);\n            }\n        }).catch((err: any) => {\n            console.log(err);\n        });\n    }\n\n    mounted() {\n        let sakura_point_vsh: string = `\nuniform mat4 uProjection;\nuniform mat4 uModelview;\nuniform vec3 uResolution;\nuniform vec3 uOffset;\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nattribute vec3 aPosition;\nattribute vec3 aEuler;\nattribute vec2 aMisc; //x:size, y:fade\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nvoid main(void) {\n    // Projection is based on vertical angle\n    vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n    gl_Position = uProjection * pos;\n    gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n\n    pposition = pos.xyz;\n    psize = aMisc.x;\n    pdist = length(pos.xyz);\n    palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n\n    vec3 elrsn = sin(aEuler);\n    vec3 elrcs = cos(aEuler);\n    mat3 rotx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, elrcs.x, elrsn.x,\n        0.0, -elrsn.x, elrcs.x\n    );\n    mat3 roty = mat3(\n        elrcs.y, 0.0, -elrsn.y,\n        0.0, 1.0, 0.0,\n        elrsn.y, 0.0, elrcs.y\n    );\n    mat3 rotz = mat3(\n        elrcs.z, elrsn.z, 0.0,\n        -elrsn.z, elrcs.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n    mat3 rotmat = rotx * roty * rotz;\n    normal = rotmat[2];\n\n    mat3 trrotm = mat3(\n        rotmat[0][0], rotmat[1][0], rotmat[2][0],\n        rotmat[0][1], rotmat[1][1], rotmat[2][1],\n        rotmat[0][2], rotmat[1][2], rotmat[2][2]\n    );\n    normX = trrotm[0];\n    normY = trrotm[1];\n    normZ = trrotm[2];\n\n    const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n\n    float tmpdfs = dot(lit, normal);\n    if(tmpdfs < 0.0) {\n        normal = -normal;\n        tmpdfs = dot(lit, normal);\n    }\n    diffuse = 0.4 + tmpdfs;\n\n    vec3 eyev = normalize(-pos.xyz);\n    if(dot(eyev, normal) > 0.0) {\n        vec3 hv = normalize(eyev + lit);\n        specular = pow(max(dot(hv, normal), 0.0), 20.0);\n    }\n    else {\n        specular = 0.0;\n    }\n\n    rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n    rstop = pow(rstop, 0.5);\n    //-0.69315 = ln(0.5)\n    distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n}`;\n        let sakura_point_fsh: string = `\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec3 uDOF;  //x:focus distance, y:focus radius, z:max radius\nuniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\nconst vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\nvarying vec3 pposition;\nvarying float psize;\nvarying float palpha;\nvarying float pdist;\n\n//varying mat3 rotMat;\nvarying vec3 normX;\nvarying vec3 normY;\nvarying vec3 normZ;\nvarying vec3 normal;\n\nvarying float diffuse;\nvarying float specular;\nvarying float rstop;\nvarying float distancefade;\n\nfloat ellipse(vec2 p, vec2 o, vec2 r) {\n    vec2 lp = (p - o) / r;\n    return length(lp) - 1.0;\n}\n\nvoid main(void) {\n    vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n    vec3 d = vec3(0.0, 0.0, -1.0);\n    float nd = normZ.z; //dot(-normZ, d);\n    if(abs(nd) < 0.0001) discard;\n\n    float np = dot(normZ, p);\n    vec3 tp = p + d * np / nd;\n    vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n\n    //angle = 15 degree\n    const float flwrsn = 0.258819045102521;\n    const float flwrcs = 0.965925826289068;\n    mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n    vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n\n    float r;\n    if(flwrp.x < 0.0) {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n    }\n    else {\n        r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n    }\n\n    if(r > rstop) discard;\n\n    vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n    float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n    col *= vec3(1.0, grady, grady);\n    col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n    col = col * diffuse + specular;\n\n    col = mix(fadeCol, col, distancefade);\n\n    float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n    alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n\n    gl_FragColor = vec4(col * 0.5, alpha);\n}`;\n        let fx_common_vsh: string = `\nuniform vec3 uResolution;\nattribute vec2 aPosition;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}`;\n        let bg_fsh: string = `\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\n\nuniform vec2 uTimes;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec3 col;\n    float c;\n    vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n    c = exp(-pow(length(tmpv) * 1.8, 2.0));\n    col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n    gl_FragColor = vec4(col * 0.5, 1.0);\n}`;\n        let fx_brightbuf_fsh: string = `\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n}`;\n        let fx_dirblur_r4_fsh: string = `\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform vec2 uDelta;\nuniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\n\nvoid main(void) {\n    vec4 col = texture2D(uSrc, texCoord);\n    col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n    col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n    gl_FragColor = col / 5.0;\n}`;\n        let pp_final_vsh: string = `\nuniform vec3 uResolution;\nattribute vec2 aPosition;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n    texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n    screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n}`;\n        let pp_final_fsh: string = `\n#ifdef GL_ES\n//precision mediump float;\nprecision highp float;\n#endif\nuniform sampler2D uSrc;\nuniform sampler2D uBloom;\nuniform vec2 uDelta;\nvarying vec2 texCoord;\nvarying vec2 screenCoord;\nvoid main(void) {\n    vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n    vec4 bloomcol = texture2D(uBloom, texCoord);\n    vec4 col;\n    col = srccol + bloomcol * (vec4(1.0) + srccol);\n    col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n    col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n\n    gl_FragColor = vec4(col.rgb, 1.0);\n    gl_FragColor.a = 1.0;\n}`;\n\n        // Utilities\n        var Vector3: any = {};\n        var Matrix44: any = {};\n        Vector3.create = function(x: any, y: any, z: any) {\n            return {x: x, y: y, z: z};\n        };\n        Vector3.dot = function(v0: any, v1: any) {\n            return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n        };\n        Vector3.cross = function(v: any, v0: any, v1: any) {\n            v.x = v0.y * v1.z - v0.z * v1.y;\n            v.y = v0.z * v1.x - v0.x * v1.z;\n            v.z = v0.x * v1.y - v0.y * v1.x;\n        };\n        Vector3.normalize = function(v: any) {\n            var l: any = v.x * v.x + v.y * v.y + v.z * v.z;\n            if (l > 0.00001) {\n                l = 1.0 / Math.sqrt(l);\n                v.x *= l;\n                v.y *= l;\n                v.z *= l;\n            }\n        };\n        Vector3.arrayForm = function(v: any) {\n            if (v.array) {\n                v.array[0] = v.x;\n                v.array[1] = v.y;\n                v.array[2] = v.z;\n            } else {\n                v.array = new Float32Array([v.x, v.y, v.z]);\n            }\n            return v.array;\n        };\n        Matrix44.createIdentity = function() {\n            return new Float32Array([\n                1.0,\n                0.0,\n                0.0,\n                0.0,\n                0.0,\n                1.0,\n                0.0,\n                0.0,\n                0.0,\n                0.0,\n                1.0,\n                0.0,\n                0.0,\n                0.0,\n                0.0,\n                1.0\n            ]);\n        };\n        Matrix44.loadProjection = function(\n            m: any,\n            aspect: any,\n            vdeg: any,\n            near: any,\n            far: any\n        ) {\n            let h = near * Math.tan(((vdeg * Math.PI) / 180.0) * 0.5) * 2.0;\n            let w = h * aspect;\n\n            m[0] = (2.0 * near) / w;\n            m[1] = 0.0;\n            m[2] = 0.0;\n            m[3] = 0.0;\n\n            m[4] = 0.0;\n            m[5] = (2.0 * near) / h;\n            m[6] = 0.0;\n            m[7] = 0.0;\n\n            m[8] = 0.0;\n            m[9] = 0.0;\n            m[10] = -(far + near) / (far - near);\n            m[11] = -1.0;\n\n            m[12] = 0.0;\n            m[13] = 0.0;\n            m[14] = (-2.0 * far * near) / (far - near);\n            m[15] = 0.0;\n        };\n        Matrix44.loadLookAt = function(m: any, vpos: any, vlook: any, vup: any) {\n            let frontv = Vector3.create(\n                vpos.x - vlook.x,\n                vpos.y - vlook.y,\n                vpos.z - vlook.z\n            );\n            Vector3.normalize(frontv);\n            let sidev = Vector3.create(1.0, 0.0, 0.0);\n            Vector3.cross(sidev, vup, frontv);\n            Vector3.normalize(sidev);\n            let topv = Vector3.create(1.0, 0.0, 0.0);\n            Vector3.cross(topv, frontv, sidev);\n            Vector3.normalize(topv);\n\n            m[0] = sidev.x;\n            m[1] = topv.x;\n            m[2] = frontv.x;\n            m[3] = 0.0;\n\n            m[4] = sidev.y;\n            m[5] = topv.y;\n            m[6] = frontv.y;\n            m[7] = 0.0;\n\n            m[8] = sidev.z;\n            m[9] = topv.z;\n            m[10] = frontv.z;\n            m[11] = 0.0;\n\n            m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]);\n            m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]);\n            m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]);\n            m[15] = 1.0;\n        };\n\n        //\n        var timeInfo: any = {\n            start: 0,\n            prev: 0, // Date\n            delta: 0,\n            elapsed: 0 // Number(sec)\n        };\n\n        //\n        var gl: any;\n        var renderSpec: any = {\n            width: 0,\n            height: 0,\n            aspect: 1,\n            array: new Float32Array(3),\n            halfWidth: 0,\n            halfHeight: 0,\n            halfArray: new Float32Array(3)\n            // and some render targets. see setViewport()\n        };\n        renderSpec.setSize = function(w: any, h: any) {\n            renderSpec.width = w;\n            renderSpec.height = h;\n            renderSpec.aspect = renderSpec.width / renderSpec.height;\n            renderSpec.array[0] = renderSpec.width;\n            renderSpec.array[1] = renderSpec.height;\n            renderSpec.array[2] = renderSpec.aspect;\n\n            renderSpec.halfWidth = Math.floor(w / 2);\n            renderSpec.halfHeight = Math.floor(h / 2);\n            renderSpec.halfArray[0] = renderSpec.halfWidth;\n            renderSpec.halfArray[1] = renderSpec.halfHeight;\n            renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight;\n        };\n\n        function deleteRenderTarget(rt: any) {\n            gl.deleteFramebuffer(rt.frameBuffer);\n            gl.deleteRenderbuffer(rt.renderBuffer);\n            gl.deleteTexture(rt.texture);\n        }\n\n        function createRenderTarget(w: any, h: any) {\n            var ret: any = {\n                width: w,\n                height: h,\n                sizeArray: new Float32Array([w, h, w / h]),\n                dtxArray: new Float32Array([1.0 / w, 1.0 / h])\n            };\n            ret.frameBuffer = gl.createFramebuffer();\n            ret.renderBuffer = gl.createRenderbuffer();\n            ret.texture = gl.createTexture();\n\n            gl.bindTexture(gl.TEXTURE_2D, ret.texture);\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA,\n                w,\n                h,\n                0,\n                gl.RGBA,\n                gl.UNSIGNED_BYTE,\n                null\n            );\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer);\n            gl.framebufferTexture2D(\n                gl.FRAMEBUFFER,\n                gl.COLOR_ATTACHMENT0,\n                gl.TEXTURE_2D,\n                ret.texture,\n                0\n            );\n\n            gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n            gl.framebufferRenderbuffer(\n                gl.FRAMEBUFFER,\n                gl.DEPTH_ATTACHMENT,\n                gl.RENDERBUFFER,\n                ret.renderBuffer\n            );\n\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n            return ret;\n        }\n\n        function compileShader(shtype: any, shsrc: any) {\n            var retsh: any = gl.createShader(shtype);\n\n            gl.shaderSource(retsh, shsrc);\n            gl.compileShader(retsh);\n\n            if (!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) {\n                var errlog: any = gl.getShaderInfoLog(retsh);\n                gl.deleteShader(retsh);\n                console.error(errlog);\n                return null;\n            }\n            return retsh;\n        }\n\n        function createShader(\n            vtxsrc: any,\n            frgsrc: any,\n            uniformlist: any,\n            attrlist: any\n        ) {\n            var vsh: any = compileShader(gl.VERTEX_SHADER, vtxsrc);\n            var fsh: any = compileShader(gl.FRAGMENT_SHADER, frgsrc);\n\n            if (vsh == null || fsh == null) {\n                return null;\n            }\n\n            var prog: any = gl.createProgram();\n            gl.attachShader(prog, vsh);\n            gl.attachShader(prog, fsh);\n\n            gl.deleteShader(vsh);\n            gl.deleteShader(fsh);\n\n            gl.linkProgram(prog);\n            if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n                var errlog: any = gl.getProgramInfoLog(prog);\n                console.error(errlog);\n                return null;\n            }\n\n            if (uniformlist) {\n                prog.uniforms = {};\n                for (var i = 0; i < uniformlist.length; i++) {\n                    prog.uniforms[uniformlist[i]] = gl.getUniformLocation(\n                        prog,\n                        uniformlist[i]\n                    );\n                }\n            }\n\n            if (attrlist) {\n                prog.attributes = {};\n                for (let i = 0; i < attrlist.length; i++) {\n                    let attr = attrlist[i];\n                    prog.attributes[attr] = gl.getAttribLocation(prog, attr);\n                }\n            }\n\n            return prog;\n        }\n\n        function useShader(prog: any) {\n            gl.useProgram(prog);\n            for (let attr in prog.attributes) {\n                gl.enableVertexAttribArray(prog.attributes[attr]);\n            }\n        }\n\n        function unuseShader(prog: any) {\n            for (let attr in prog.attributes) {\n                gl.disableVertexAttribArray(prog.attributes[attr]);\n            }\n            gl.useProgram(null);\n        }\n\n        /////\n        var projection: any = {\n            angle: 60,\n            nearfar: new Float32Array([0.1, 100.0]),\n            matrix: Matrix44.createIdentity()\n        };\n        var camera: any = {\n            position: Vector3.create(0, 0, 100),\n            lookat: Vector3.create(0, 0, 0),\n            up: Vector3.create(0, 1, 0),\n            dof: Vector3.create(10.0, 4.0, 8.0),\n            matrix: Matrix44.createIdentity()\n        };\n\n        var pointFlower: any = {};\n        // var meshFlower = {};\n        var sceneStandBy: any = false;\n\n        var BlossomParticle: any = function() {\n            this.velocity = new Array(3);\n            this.rotation = new Array(3);\n            this.position = new Array(3);\n            this.euler = new Array(3);\n            this.size = 1.0;\n            this.alpha = 1.0;\n            this.zkey = 0.0;\n        };\n\n        BlossomParticle.prototype.setVelocity = function(\n            vx: any,\n            vy: any,\n            vz: any\n        ) {\n            this.velocity[0] = vx;\n            this.velocity[1] = vy;\n            this.velocity[2] = vz;\n        };\n\n        BlossomParticle.prototype.setRotation = function(\n            rx: any,\n            ry: any,\n            rz: any\n        ) {\n            this.rotation[0] = rx;\n            this.rotation[1] = ry;\n            this.rotation[2] = rz;\n        };\n\n        BlossomParticle.prototype.setPosition = function(\n            nx: any,\n            ny: any,\n            nz: any\n        ) {\n            this.position[0] = nx;\n            this.position[1] = ny;\n            this.position[2] = nz;\n        };\n\n        BlossomParticle.prototype.setEulerAngles = function(\n            rx: any,\n            ry: any,\n            rz: any\n        ) {\n            this.euler[0] = rx;\n            this.euler[1] = ry;\n            this.euler[2] = rz;\n        };\n\n        BlossomParticle.prototype.setSize = function(s: any) {\n            this.size = s;\n        };\n\n        BlossomParticle.prototype.update = function(dt: any, et: any) {\n            this.position[0] += this.velocity[0] * dt;\n            this.position[1] += this.velocity[1] * dt;\n            this.position[2] += this.velocity[2] * dt;\n\n            this.euler[0] += this.rotation[0] * dt;\n            this.euler[1] += this.rotation[1] * dt;\n            this.euler[2] += this.rotation[2] * dt;\n        };\n\n        function createPointFlowers() {\n            // get point sizes\n            var prm: any = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\n            renderSpec.pointSize = {min: prm[0], max: prm[1]};\n\n            var vtxsrc: any = sakura_point_vsh;\n            var frgsrc: any = sakura_point_fsh;\n\n            pointFlower.program = createShader(\n                vtxsrc,\n                frgsrc,\n                [\n                    \"uProjection\",\n                    \"uModelview\",\n                    \"uResolution\",\n                    \"uOffset\",\n                    \"uDOF\",\n                    \"uFade\"\n                ],\n                [\"aPosition\", \"aEuler\", \"aMisc\"]\n            );\n\n            useShader(pointFlower.program);\n            pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]);\n            pointFlower.fader = Vector3.create(0.0, 10.0, 0.0);\n\n            // paramerters: velocity[3], rotate[3]\n            pointFlower.numFlowers = 1600;\n            pointFlower.particles = new Array(pointFlower.numFlowers);\n            // vertex attributes {position[3], euler_xyz[3], size[1]}\n            pointFlower.dataArray = new Float32Array(\n                pointFlower.numFlowers * (3 + 3 + 2)\n            );\n            pointFlower.positionArrayOffset = 0;\n            pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3;\n            pointFlower.miscArrayOffset = pointFlower.numFlowers * 6;\n\n            pointFlower.buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n            unuseShader(pointFlower.program);\n\n            for (let i = 0; i < pointFlower.numFlowers; i++) {\n                pointFlower.particles[i] = new BlossomParticle();\n            }\n        }\n\n        function initPointFlowers() {\n            //area\n            pointFlower.area = Vector3.create(20.0, 20.0, 20.0);\n            pointFlower.area.x = pointFlower.area.y * renderSpec.aspect;\n\n            pointFlower.fader.x = 10.0; //env fade start\n            pointFlower.fader.y = pointFlower.area.z; //env fade half\n            pointFlower.fader.z = 0.1; //near fade start\n\n            //particles\n            var PI2: any = Math.PI * 2.0;\n            var tmpv3: any = Vector3.create(0, 0, 0);\n            var tmpv: any = 0;\n            var symmetryrand: any = function() {\n                return Math.random() * 2.0 - 1.0;\n            };\n            for (let i = 0; i < pointFlower.numFlowers; i++) {\n                let tmpprtcl = pointFlower.particles[i];\n\n                //velocity\n                tmpv3.x = symmetryrand() * 0.3 + 0.8;\n                tmpv3.y = symmetryrand() * 0.2 - 1.0;\n                tmpv3.z = symmetryrand() * 0.3 + 0.5;\n                Vector3.normalize(tmpv3);\n                tmpv = 2.0 + Math.random() * 1.0;\n                tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv);\n\n                //rotation\n                tmpprtcl.setRotation(\n                    symmetryrand() * PI2 * 0.5,\n                    symmetryrand() * PI2 * 0.5,\n                    symmetryrand() * PI2 * 0.5\n                );\n\n                //position\n                tmpprtcl.setPosition(\n                    symmetryrand() * pointFlower.area.x,\n                    symmetryrand() * pointFlower.area.y,\n                    symmetryrand() * pointFlower.area.z\n                );\n\n                //euler\n                tmpprtcl.setEulerAngles(\n                    Math.random() * Math.PI * 2.0,\n                    Math.random() * Math.PI * 2.0,\n                    Math.random() * Math.PI * 2.0\n                );\n\n                //size\n                tmpprtcl.setSize(0.9 + Math.random() * 0.1);\n            }\n        }\n\n        function renderPointFlowers() {\n            //update\n            var PI2: any = Math.PI * 2.0;\n            // var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z];\n            var repeatPos: any = function(prt: any, cmp: any, limit: any) {\n                if (Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) {\n                    //out of area\n                    if (prt.position[cmp] > 0) {\n                        prt.position[cmp] -= limit * 2.0;\n                    } else {\n                        prt.position[cmp] += limit * 2.0;\n                    }\n                }\n            };\n            var repeatEuler: any = function(prt: any, cmp: any) {\n                prt.euler[cmp] = prt.euler[cmp] % PI2;\n                if (prt.euler[cmp] < 0.0) {\n                    prt.euler[cmp] += PI2;\n                }\n            };\n\n            for (let i = 0; i < pointFlower.numFlowers; i++) {\n                let prtcl = pointFlower.particles[i];\n                prtcl.update(timeInfo.delta, timeInfo.elapsed);\n                repeatPos(prtcl, 0, pointFlower.area.x);\n                repeatPos(prtcl, 1, pointFlower.area.y);\n                repeatPos(prtcl, 2, pointFlower.area.z);\n                repeatEuler(prtcl, 0);\n                repeatEuler(prtcl, 1);\n                repeatEuler(prtcl, 2);\n\n                prtcl.alpha = 1.0; //(pointFlower.area.z - prtcl.position[2]) * 0.5;\n\n                prtcl.zkey =\n                    camera.matrix[2] * prtcl.position[0] +\n                    camera.matrix[6] * prtcl.position[1] +\n                    camera.matrix[10] * prtcl.position[2] +\n                    camera.matrix[14];\n            }\n\n            // sort\n            pointFlower.particles.sort(function(p0: any, p1: any) {\n                return p0.zkey - p1.zkey;\n            });\n\n            // update data\n            var ipos: any = pointFlower.positionArrayOffset;\n            var ieuler: any = pointFlower.eulerArrayOffset;\n            var imisc: any = pointFlower.miscArrayOffset;\n            for (let i = 0; i < pointFlower.numFlowers; i++) {\n                let prtcl = pointFlower.particles[i];\n                pointFlower.dataArray[ipos] = prtcl.position[0];\n                pointFlower.dataArray[ipos + 1] = prtcl.position[1];\n                pointFlower.dataArray[ipos + 2] = prtcl.position[2];\n                ipos += 3;\n                pointFlower.dataArray[ieuler] = prtcl.euler[0];\n                pointFlower.dataArray[ieuler + 1] = prtcl.euler[1];\n                pointFlower.dataArray[ieuler + 2] = prtcl.euler[2];\n                ieuler += 3;\n                pointFlower.dataArray[imisc] = prtcl.size;\n                pointFlower.dataArray[imisc + 1] = prtcl.alpha;\n                imisc += 2;\n            }\n\n            //draw\n            gl.enable(gl.BLEND);\n            //gl.disable(gl.DEPTH_TEST);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            var prog: any = pointFlower.program;\n            useShader(prog);\n\n            gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix);\n            gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix);\n            gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n            gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof));\n            gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader));\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW);\n\n            gl.vertexAttribPointer(\n                prog.attributes.aPosition,\n                3,\n                gl.FLOAT,\n                false,\n                0,\n                pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT\n            );\n            gl.vertexAttribPointer(\n                prog.attributes.aEuler,\n                3,\n                gl.FLOAT,\n                false,\n                0,\n                pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT\n            );\n            gl.vertexAttribPointer(\n                prog.attributes.aMisc,\n                2,\n                gl.FLOAT,\n                false,\n                0,\n                pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT\n            );\n\n            // doubler\n            for (let i = 1; i < 2; i++) {\n                let zpos = i * -2.0;\n                pointFlower.offset[0] = pointFlower.area.x * -1.0;\n                pointFlower.offset[1] = pointFlower.area.y * -1.0;\n                pointFlower.offset[2] = pointFlower.area.z * zpos;\n                gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n                gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n                pointFlower.offset[0] = pointFlower.area.x * -1.0;\n                pointFlower.offset[1] = pointFlower.area.y * 1.0;\n                pointFlower.offset[2] = pointFlower.area.z * zpos;\n                gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n                gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n                pointFlower.offset[0] = pointFlower.area.x * 1.0;\n                pointFlower.offset[1] = pointFlower.area.y * -1.0;\n                pointFlower.offset[2] = pointFlower.area.z * zpos;\n                gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n                gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n                pointFlower.offset[0] = pointFlower.area.x * 1.0;\n                pointFlower.offset[1] = pointFlower.area.y * 1.0;\n                pointFlower.offset[2] = pointFlower.area.z * zpos;\n                gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n                gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n            }\n\n            //main\n            pointFlower.offset[0] = 0.0;\n            pointFlower.offset[1] = 0.0;\n            pointFlower.offset[2] = 0.0;\n            gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset);\n            gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            unuseShader(prog);\n\n            gl.enable(gl.DEPTH_TEST);\n            gl.disable(gl.BLEND);\n        }\n\n        // effects\n        //common util\n        function createEffectProgram(\n            vtxsrc: any,\n            frgsrc: any,\n            exunifs: any,\n            exattrs: any\n        ) {\n            var ret: any = {};\n            var unifs: any = [\"uResolution\", \"uSrc\", \"uDelta\"];\n            if (exunifs) {\n                unifs = unifs.concat(exunifs);\n            }\n            var attrs: any = [\"aPosition\"];\n            if (exattrs) {\n                attrs = attrs.concat(exattrs);\n            }\n\n            ret.program = createShader(vtxsrc, frgsrc, unifs, attrs);\n            useShader(ret.program);\n\n            ret.dataArray = new Float32Array([\n                -1.0,\n                -1.0,\n                1.0,\n                -1.0,\n                -1.0,\n                1.0,\n                1.0,\n                1.0\n            ]);\n            ret.buffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, null);\n            unuseShader(ret.program);\n\n            return ret;\n        }\n\n        function useEffect(fxobj: any, srctex: any) {\n            var prog: any = fxobj.program;\n            useShader(prog);\n            gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array);\n\n            if (srctex != null) {\n                gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray);\n                gl.uniform1i(prog.uniforms.uSrc, 0);\n\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, srctex.texture);\n            }\n        }\n\n        function drawEffect(fxobj: any) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer);\n            gl.vertexAttribPointer(\n                fxobj.program.attributes.aPosition,\n                2,\n                gl.FLOAT,\n                false,\n                0,\n                0\n            );\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n\n        function unuseEffect(fxobj: any) {\n            unuseShader(fxobj.program);\n        }\n\n        var effectLib: any = {};\n\n        function createEffectLib() {\n            var vtxsrc: any, frgsrc: any;\n            //common\n            var cmnvtxsrc: any = fx_common_vsh;\n\n            //background\n            frgsrc = bg_fsh;\n            effectLib.sceneBg = createEffectProgram(\n                cmnvtxsrc,\n                frgsrc,\n                [\"uTimes\"],\n                null\n            );\n\n            // make brightpixels buffer\n            frgsrc = fx_brightbuf_fsh;\n            effectLib.mkBrightBuf = createEffectProgram(\n                cmnvtxsrc,\n                frgsrc,\n                null,\n                null\n            );\n\n            // direction blur\n            frgsrc = fx_dirblur_r4_fsh;\n            effectLib.dirBlur = createEffectProgram(\n                cmnvtxsrc,\n                frgsrc,\n                [\"uBlurDir\"],\n                null\n            );\n\n            //final composite\n            vtxsrc = pp_final_vsh;\n            frgsrc = pp_final_fsh;\n            // console.log('frgsrc :',frgsrc )\n            effectLib.finalComp = createEffectProgram(\n                vtxsrc,\n                frgsrc,\n                [\"uBloom\"],\n                null\n            );\n        }\n\n        // background\n        function createBackground() {\n            //console.log(\"create background\");\n        }\n\n        function initBackground() {\n            //console.log(\"init background\");\n        }\n\n        function renderBackground() {\n            gl.disable(gl.DEPTH_TEST);\n\n            useEffect(effectLib.sceneBg, null);\n            gl.uniform2f(\n                effectLib.sceneBg.program.uniforms.uTimes,\n                timeInfo.elapsed,\n                timeInfo.delta\n            );\n            drawEffect(effectLib.sceneBg);\n            unuseEffect(effectLib.sceneBg);\n\n            gl.enable(gl.DEPTH_TEST);\n        }\n\n        // post process\n        // var postProcess = {};\n        function createPostProcess() {\n            //console.log(\"create post process\");\n        }\n\n        function initPostProcess() {\n            //console.log(\"init post process\");\n        }\n\n        function renderPostProcess() {\n            // gl.enable(gl.TEXTURE_2D);\n            gl.disable(gl.DEPTH_TEST);\n            var bindRT: any = function(rt: any, isclear: any) {\n                gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer);\n                gl.viewport(0, 0, rt.width, rt.height);\n                if (isclear) {\n                    gl.clearColor(0, 0, 0, 0);\n                    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n                }\n            };\n\n            //make bright buff\n            bindRT(renderSpec.wHalfRT0, true);\n            useEffect(effectLib.mkBrightBuf, renderSpec.mainRT);\n            drawEffect(effectLib.mkBrightBuf);\n            unuseEffect(effectLib.mkBrightBuf);\n\n            // make bloom\n            for (let i = 0; i < 2; i++) {\n                let p = 1.5 + 1 * i;\n                let s = 2.0 + 1 * i;\n                bindRT(renderSpec.wHalfRT1, true);\n                useEffect(effectLib.dirBlur, renderSpec.wHalfRT0);\n                gl.uniform4f(\n                    effectLib.dirBlur.program.uniforms.uBlurDir,\n                    p,\n                    0.0,\n                    s,\n                    0.0\n                );\n                drawEffect(effectLib.dirBlur);\n                unuseEffect(effectLib.dirBlur);\n\n                bindRT(renderSpec.wHalfRT0, true);\n                useEffect(effectLib.dirBlur, renderSpec.wHalfRT1);\n                gl.uniform4f(\n                    effectLib.dirBlur.program.uniforms.uBlurDir,\n                    0.0,\n                    p,\n                    0.0,\n                    s\n                );\n                drawEffect(effectLib.dirBlur);\n                unuseEffect(effectLib.dirBlur);\n            }\n\n            //display\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n            useEffect(effectLib.finalComp, renderSpec.mainRT);\n            gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1);\n            gl.activeTexture(gl.TEXTURE1);\n            gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture);\n            drawEffect(effectLib.finalComp);\n            unuseEffect(effectLib.finalComp);\n\n            gl.enable(gl.DEPTH_TEST);\n        }\n\n        /////\n        // var SceneEnv = {};\n        function createScene() {\n            createEffectLib();\n            createBackground();\n            createPointFlowers();\n            createPostProcess();\n            sceneStandBy = true;\n        }\n\n        function initScene() {\n            initBackground();\n            initPointFlowers();\n            initPostProcess();\n\n            //camera.position.z = 17.320508;\n            camera.position.z = pointFlower.area.z + projection.nearfar[0];\n            projection.angle =\n                ((Math.atan2(\n                    pointFlower.area.y,\n                    camera.position.z + pointFlower.area.z\n                    ) *\n                    180.0) /\n                    Math.PI) *\n                2.0;\n            Matrix44.loadProjection(\n                projection.matrix,\n                renderSpec.aspect,\n                projection.angle,\n                projection.nearfar[0],\n                projection.nearfar[1]\n            );\n        }\n\n        function renderScene() {\n            //draw\n            Matrix44.loadLookAt(\n                camera.matrix,\n                camera.position,\n                camera.lookat,\n                camera.up\n            );\n\n            gl.enable(gl.DEPTH_TEST);\n\n            //gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer);\n            gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height);\n            gl.clearColor(0.005, 0, 0.05, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n            renderBackground();\n            renderPointFlowers();\n            renderPostProcess();\n        }\n\n        /////\n        function onResize(e: any) {\n            makeCanvasFullScreen(document.getElementById(\"sakura\"));\n            setViewports();\n            if (sceneStandBy) {\n                initScene();\n            }\n        }\n\n        function setViewports() {\n            renderSpec.setSize(gl.canvas.width, gl.canvas.height);\n\n            gl.clearColor(0.2, 0.2, 0.5, 1.0);\n            gl.viewport(0, 0, renderSpec.width, renderSpec.height);\n\n            var rtfunc: any = function(rtname: any, rtw: any, rth: any) {\n                var rt: any = renderSpec[rtname];\n                if (rt) {\n                    deleteRenderTarget(rt);\n                }\n                renderSpec[rtname] = createRenderTarget(rtw, rth);\n            };\n            rtfunc(\"mainRT\", renderSpec.width, renderSpec.height);\n            rtfunc(\"wFullRT0\", renderSpec.width, renderSpec.height);\n            rtfunc(\"wFullRT1\", renderSpec.width, renderSpec.height);\n            rtfunc(\"wHalfRT0\", renderSpec.halfWidth, renderSpec.halfHeight);\n            rtfunc(\"wHalfRT1\", renderSpec.halfWidth, renderSpec.halfHeight);\n        }\n\n        function render() {\n            renderScene();\n        }\n\n        var animating: boolean = true;\n\n        function animate() {\n            var curdate: any = new Date();\n            timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0;\n            timeInfo.delta = (curdate - timeInfo.prev) / 1000.0;\n            timeInfo.prev = curdate;\n\n            if (animating) {\n                requestAnimationFrame(animate);\n            }\n            render();\n        }\n\n        function makeCanvasFullScreen(canvas: any) {\n            var b: any = document.body;\n            var d: any = document.documentElement;\n            let fullw = Math.max(\n                b.clientWidth,\n                b.scrollWidth,\n                d.scrollWidth,\n                d.clientWidth\n            );\n            let fullh = Math.max(\n                b.clientHeight,\n                b.scrollHeight,\n                d.scrollHeight,\n                d.clientHeight\n            );\n            canvas.width = fullw;\n            canvas.height = fullh;\n        }\n\n        // 保证每次都执行\n        var canvas: any = document.getElementById(\"sakura\");\n        try {\n            makeCanvasFullScreen(canvas);\n            gl = canvas.getContext(\"experimental-webgl\");\n        } catch (e) {\n            alert(\"WebGL not supported.\" + e);\n            console.error(e);\n            return;\n        }\n\n        window.addEventListener(\"resize\", onResize);\n\n        setViewports();\n        createScene();\n        initScene();\n\n        timeInfo.start = new Date();\n        timeInfo.prev = timeInfo.start;\n        animate();\n\n        //set window.requestAnimationFrame\n        (function(w: any, r: any) {\n            w[\"r\" + r] =\n                w[\"r\" + r] ||\n                w[\"webkitR\" + r] ||\n                w[\"mozR\" + r] ||\n                w[\"msR\" + r] ||\n                w[\"oR\" + r] ||\n                function(c: any) {\n                    w.setTimeout(c, 1000 / 60);\n                };\n        })(window, \"equestAnimationFrame\");\n        setTimeout(() => {\n            this.loginShow = true;\n        }, 500);\n    }\n\n}\n"],"sourceRoot":""}]}