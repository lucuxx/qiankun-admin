{"remainingRequest":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/babel-loader/lib/index.js!/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/components/MarkDown/utils/index.js","dependencies":[{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/components/MarkDown/utils/index.js","mtime":1565250359915},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuxiang/Desktop/lxx/lxx/blob-server/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction insertText(textDom, value) {\n  textDom.focus();\n  var startPos = getSelection(textDom).start;\n  var endPos = getSelection(textDom).end;\n  textDom.value = textDom.value.substring(0, startPos) + value + textDom.value.substring(endPos, textDom.value.length);\n  textDom.selectionStart = startPos + value.length;\n  textDom.selectionEnd = startPos + value.length;\n} // 获取焦点起始坐标\n\n\nfunction getSelection(el) {\n  var start = 0,\n      end = 0,\n      normalizedValue,\n      range,\n      textInputRange,\n      len,\n      endRange;\n\n  if (typeof el.selectionStart == \"number\" && typeof el.selectionEnd == \"number\") {\n    start = el.selectionStart;\n    end = el.selectionEnd;\n  } else {\n    range = document.selection.createRange();\n\n    if (range && range.parentElement() === el) {\n      len = el.value.length;\n      normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\"); // Create a working TextRange that lives only in the input\n\n      textInputRange = el.createTextRange();\n      textInputRange.moveToBookmark(range.getBookmark()); // Check if the start and end of the selection are at the very end\n      // of the input, since moveStart/moveEnd doesn't return what we want\n      // in those cases\n\n      endRange = el.createTextRange();\n      endRange.collapse(false);\n\n      if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n        start = end = len;\n      } else {\n        start = -textInputRange.moveStart(\"character\", -len);\n        start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n        if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n          end = len;\n        } else {\n          end = -textInputRange.moveEnd(\"character\", -len);\n          end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n        }\n      }\n    }\n  }\n\n  return {\n    start: start,\n    end: end\n  };\n}\n\nexport default insertText;",{"version":3,"sources":["/Users/liuxiang/Desktop/lxx/lxx/blob-server/src/components/MarkDown/utils/index.js"],"names":["insertText","textDom","value","focus","startPos","getSelection","start","endPos","end","substring","length","selectionStart","selectionEnd","el","normalizedValue","range","textInputRange","len","endRange","document","selection","createRange","parentElement","replace","createTextRange","moveToBookmark","getBookmark","collapse","compareEndPoints","moveStart","slice","split","moveEnd"],"mappings":"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","sourcesContent":["function insertText(textDom, value) {\n    textDom.focus();\n    const startPos = getSelection(textDom).start;\n    const endPos = getSelection(textDom).end;\n    textDom.value = textDom.value.substring(0, startPos) + value + textDom.value.substring(endPos, textDom.value.length);\n    textDom.selectionStart = startPos + value.length;\n    textDom.selectionEnd = startPos + value.length;\n\n}\n// 获取焦点起始坐标\nfunction getSelection(el) {\n    let start = 0, end = 0, normalizedValue, range,\n        textInputRange, len, endRange;\n\n    if (typeof el.selectionStart == \"number\" && typeof el.selectionEnd == \"number\") {\n        start = el.selectionStart;\n        end = el.selectionEnd;\n    } else {\n        range = document.selection.createRange();\n\n        if (range && range.parentElement() === el) {\n            len = el.value.length;\n            normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n            // Create a working TextRange that lives only in the input\n            textInputRange = el.createTextRange();\n            textInputRange.moveToBookmark(range.getBookmark());\n\n            // Check if the start and end of the selection are at the very end\n            // of the input, since moveStart/moveEnd doesn't return what we want\n            // in those cases\n            endRange = el.createTextRange();\n            endRange.collapse(false);\n\n            if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                start = end = len;\n            } else {\n                start = -textInputRange.moveStart(\"character\", -len);\n                start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n                if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                    end = len;\n                } else {\n                    end = -textInputRange.moveEnd(\"character\", -len);\n                    end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n                }\n            }\n        }\n    }\n    return {\n        start: start,\n        end: end\n    }\n}\nexport default insertText\n"]}]}